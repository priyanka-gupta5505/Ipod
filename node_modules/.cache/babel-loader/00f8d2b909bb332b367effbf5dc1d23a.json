{"ast":null,"code":"/*!\n * \n * ZingTouch v1.0.6\n * Author: ZingChart http://zingchart.com\n * License: MIT\n */\n!function (e) {\n  function t(r) {\n    if (n[r]) return n[r].exports;\n    var i = n[r] = {\n      exports: {},\n      id: r,\n      loaded: !1\n    };\n    return e[r].call(i.exports, i, i.exports, t), i.loaded = !0, i.exports;\n  }\n\n  var n = {};\n  return t.m = e, t.c = n, t.p = \"\", t(0);\n}([function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  var i = n(1),\n      u = r(i);\n  window.ZingTouch = u.default;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var i = n(2),\n      u = r(i),\n      o = n(4),\n      a = r(o),\n      s = n(10),\n      c = r(s),\n      f = n(12),\n      l = r(f),\n      d = n(13),\n      p = r(d),\n      h = n(14),\n      y = r(h),\n      v = n(15),\n      g = r(v),\n      m = n(16),\n      b = r(m),\n      w = {\n    _regions: [],\n    Gesture: a.default,\n    Expand: c.default,\n    Pan: l.default,\n    Pinch: p.default,\n    Rotate: y.default,\n    Swipe: g.default,\n    Tap: b.default,\n    Region: function (e, t, n) {\n      var r = w._regions.length,\n          i = new u.default(e, t, n, r);\n      return w._regions.push(i), i;\n    }\n  };\n  t.default = w;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var u = function () {\n    function e(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n      }\n    }\n\n    return function (t, n, r) {\n      return n && e(t.prototype, n), r && e(t, r), t;\n    };\n  }(),\n      o = n(3),\n      a = r(o),\n      s = n(4),\n      c = r(s),\n      f = n(6),\n      l = r(f),\n      d = n(9),\n      p = r(d),\n      h = function () {\n    function e(t, n, r, u) {\n      var o = this;\n      i(this, e), this.id = u, this.element = t, this.capture = \"undefined\" != typeof n && n, this.preventDefault = \"undefined\" == typeof r || r, this.state = new p.default(u);\n      var a = [];\n      a = window.PointerEvent && !window.TouchEvent ? [\"pointerdown\", \"pointermove\", \"pointerup\"] : [\"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\"], a.map(function (e) {\n        t.addEventListener(e, function (e) {\n          (0, l.default)(e, o);\n        }, o.capture);\n      });\n    }\n\n    return u(e, [{\n      key: \"bind\",\n      value: function (e, t, n, r, i) {\n        if (!e || e && !e.tagName) throw \"Bind must contain an element\";\n        return i = \"undefined\" != typeof i && i, t ? void this.state.addBinding(e, t, n, r, i) : new a.default(e, i, this.state);\n      }\n    }, {\n      key: \"bindOnce\",\n      value: function (e, t, n, r) {\n        this.bind(e, t, n, r, !0);\n      }\n    }, {\n      key: \"unbind\",\n      value: function (e, t) {\n        var n = this,\n            r = this.state.retrieveBindingsByElement(e),\n            i = [];\n        return r.forEach(function (r) {\n          if (t) {\n            if (\"string\" == typeof t && n.state.registeredGestures[t]) {\n              var u = n.state.registeredGestures[t];\n              u.id === r.gesture.id && (e.removeEventListener(r.gesture.getId(), r.handler, r.capture), i.push(r));\n            }\n          } else e.removeEventListener(r.gesture.getId(), r.handler, r.capture), i.push(r);\n        }), i;\n      }\n    }, {\n      key: \"register\",\n      value: function (e, t) {\n        if (\"string\" != typeof e) throw new Error(\"Parameter key is an invalid string\");\n        if (!t instanceof c.default) throw new Error(\"Parameter gesture is an invalid Gesture object\");\n        t.setType(e), this.state.registerGesture(t, e);\n      }\n    }, {\n      key: \"unregister\",\n      value: function (e) {\n        this.state.bindings.forEach(function (t) {\n          t.gesture.getType() === e && t.element.removeEventListener(t.gesture.getId(), t.handler, t.capture);\n        });\n        var t = this.state.registeredGestures[e];\n        return delete this.state.registeredGestures[e], t;\n      }\n    }]), e;\n  }();\n\n  t.default = h;\n}, function (e, t) {\n  \"use strict\";\n\n  function n(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var r = function e(t, r, i) {\n    var u = this;\n    n(this, e), this.element = t, Object.keys(i.registeredGestures).forEach(function (e) {\n      u[e] = function (t, n) {\n        return i.addBinding(u.element, e, t, n, r), u;\n      };\n    });\n  };\n\n  t.default = r;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var u = function () {\n    function e(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n      }\n    }\n\n    return function (t, n, r) {\n      return n && e(t.prototype, n), r && e(t, r), t;\n    };\n  }(),\n      o = n(5),\n      a = r(o),\n      s = function () {\n    function e() {\n      i(this, e), this.type = null, this.id = null;\n    }\n\n    return u(e, [{\n      key: \"setType\",\n      value: function (e) {\n        this.type = e;\n      }\n    }, {\n      key: \"getType\",\n      value: function () {\n        return this.type;\n      }\n    }, {\n      key: \"setId\",\n      value: function (e) {\n        this.id = e;\n      }\n    }, {\n      key: \"getId\",\n      value: function () {\n        return null !== this.id ? this.id : this.type;\n      }\n    }, {\n      key: \"update\",\n      value: function (e) {\n        for (var t in e) this[t] && (this[t] = e[t]);\n      }\n    }, {\n      key: \"start\",\n      value: function (e, t, n) {\n        return null;\n      }\n    }, {\n      key: \"move\",\n      value: function (e, t, n) {\n        return null;\n      }\n    }, {\n      key: \"end\",\n      value: function (e) {\n        return null;\n      }\n    }, {\n      key: \"isValid\",\n      value: function (e, t, n) {\n        var r = !0;\n        return e.length > 1 && e.forEach(function (e) {\n          a.default.isInside(e.initial.x, e.initial.y, n) || (r = !1);\n        }), r;\n      }\n    }]), e;\n  }();\n\n  t.default = s;\n}, function (e, t) {\n  \"use strict\";\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var n = 360,\n      r = 180,\n      i = {\n    normalizeEvent: function (e) {\n      switch (e) {\n        case \"mousedown\":\n        case \"touchstart\":\n        case \"pointerdown\":\n          return \"start\";\n\n        case \"mousemove\":\n        case \"touchmove\":\n        case \"pointermove\":\n          return \"move\";\n\n        case \"mouseup\":\n        case \"touchend\":\n        case \"pointerup\":\n          return \"end\";\n\n        default:\n          return null;\n      }\n    },\n    isWithin: function (e, t, n, r, i) {\n      return Math.abs(t - r) <= i && Math.abs(e - n) <= i;\n    },\n    distanceBetweenTwoPoints: function (e, t, n, r) {\n      var i = Math.sqrt((t - e) * (t - e) + (r - n) * (r - n));\n      return Math.round(100 * i) / 100;\n    },\n    getMidpoint: function (e, t, n, r) {\n      return {\n        x: (e + t) / 2,\n        y: (n + r) / 2\n      };\n    },\n    getAngle: function (e, t, i, u) {\n      var o = Math.atan2(u - t, i - e) * (r / Math.PI);\n      return n - (o < 0 ? n + o : o);\n    },\n    getAngularDistance: function (e, t) {\n      var i = (t - e) % n,\n          u = i < 0 ? 1 : -1;\n      return i = Math.abs(i), i > r ? u * (n - i) : u * i;\n    },\n    getVelocity: function (e, t, n, r, i, u) {\n      var o = this.distanceBetweenTwoPoints(e, r, t, i);\n      return o / (u - n);\n    },\n    getRightMostInput: function (e) {\n      var t = null,\n          n = Number.MIN_VALUE;\n      return e.forEach(function (e) {\n        e.initial.x > n && (t = e);\n      }), t;\n    },\n    isInteger: function (e) {\n      return \"number\" == typeof e && e % 1 === 0;\n    },\n    isInside: function (e, t, n) {\n      var r = n.getBoundingClientRect();\n      return e > r.left && e < r.left + r.width && t > r.top && t < r.top + r.height;\n    },\n    getPropagationPath: function (e) {\n      if (e.path) return e.path;\n\n      for (var t = [], n = e.target; n != document;) t.push(n), n = n.parentNode;\n\n      return t;\n    },\n    getPathIndex: function (e, t) {\n      var n = e.length;\n      return e.forEach(function (e, r) {\n        e === t && (n = r);\n      }), n;\n    },\n    setMSPreventDefault: function (e) {\n      e.style[\"-ms-content-zooming\"] = \"none\", e.style[\"touch-action\"] = \"none\";\n    },\n    removeMSPreventDefault: function (e) {\n      e.style[\"-ms-content-zooming\"] = \"\", e.style[\"touch-action\"] = \"\";\n    }\n  };\n  t.default = i;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    var n = t.state;\n\n    if (0 !== n.inputs.length || \"start\" === f.default.normalizeEvent(e.type)) {\n      if (\"undefined\" != typeof e.buttons && \"end\" !== f.default.normalizeEvent(e.type) && 0 === e.buttons) return void n.resetInputs();\n\n      if (n.updateInputs(e, t.element)) {\n        var r = n.retrieveBindingsByInitialPos();\n        r.length > 0 && !function () {\n          t.preventDefault ? (f.default.setMSPreventDefault(t.element), e.preventDefault ? e.preventDefault() : e.returnValue = !1) : f.default.removeMSPreventDefault(t.element);\n          var i = {},\n              u = (0, s.default)(r, e, n);\n          u.forEach(function (t) {\n            var n = t.binding.gesture.id;\n\n            if (i[n]) {\n              var r = f.default.getPropagationPath(e);\n              f.default.getPathIndex(r, t.binding.element) < f.default.getPathIndex(r, i[n].binding.element) && (i[n] = t);\n            } else i[n] = t;\n          }), Object.keys(i).forEach(function (e) {\n            var t = i[e];\n            (0, o.default)(t.binding, t.data, t.events);\n          });\n        }();\n        var i = 0;\n        n.inputs.forEach(function (e) {\n          \"end\" === e.getCurrentEventType() && i++;\n        }), i === n.inputs.length && n.resetInputs();\n      }\n    }\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var u = n(7),\n      o = r(u),\n      a = n(8),\n      s = r(a),\n      c = n(5),\n      f = r(c);\n  t.default = i;\n}, function (e, t) {\n  \"use strict\";\n\n  function n(e, t, n) {\n    t.events = n;\n    var i = new CustomEvent(e.gesture.getId(), {\n      detail: t,\n      bubbles: !0,\n      cancelable: !0\n    });\n    r(e.element, i, e);\n  }\n\n  function r(e, t, n) {\n    e.dispatchEvent(t), n.bindOnce && ZingTouch.unbind(n.element, n.gesture.getType());\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  }), t.default = n;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t, n) {\n    var r = o.default.normalizeEvent(t.type),\n        i = [];\n    return e.forEach(function (e) {\n      var t = e.gesture[r](n.inputs, n, e.element);\n      t && !function () {\n        var r = [];\n        n.inputs.forEach(function (e) {\n          r.push(e.current);\n        }), i.push({\n          binding: e,\n          data: t,\n          events: r\n        });\n      }();\n    }), i;\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var u = n(5),\n      o = r(u);\n  t.default = i;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function u(e, t) {\n    for (var n = 0; n < e.length; n++) if (e[n].identifier === t) return e[n];\n\n    return null;\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n    return typeof e;\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  },\n      a = function () {\n    function e(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n      }\n    }\n\n    return function (t, n, r) {\n      return n && e(t.prototype, n), r && e(t, r), t;\n    };\n  }(),\n      s = n(4),\n      c = r(s),\n      f = n(10),\n      l = r(f),\n      d = n(12),\n      p = r(d),\n      h = n(13),\n      y = r(h),\n      v = n(14),\n      g = r(v),\n      m = n(15),\n      b = r(m),\n      w = n(16),\n      _ = r(w),\n      P = n(17),\n      E = r(P),\n      O = n(18),\n      x = r(O),\n      j = n(5),\n      I = r(j),\n      T = 0,\n      k = function () {\n    function e(t) {\n      i(this, e), this.regionId = t, this.inputs = [], this.bindings = [], this.numGestures = 0, this.registeredGestures = {}, this.registerGesture(new l.default(), \"expand\"), this.registerGesture(new p.default(), \"pan\"), this.registerGesture(new g.default(), \"rotate\"), this.registerGesture(new y.default(), \"pinch\"), this.registerGesture(new b.default(), \"swipe\"), this.registerGesture(new _.default(), \"tap\");\n    }\n\n    return a(e, [{\n      key: \"addBinding\",\n      value: function (e, t, n, r, i) {\n        var u = void 0;\n        if (e && \"undefined\" == typeof e.tagName) throw new Error(\"Parameter element is an invalid object.\");\n        if (\"function\" != typeof n) throw new Error(\"Parameter handler is invalid.\");\n        if (\"string\" == typeof t && Object.keys(this.registeredGestures).indexOf(t) === -1) throw new Error(\"Parameter \" + t + \" is not a registered gesture\");\n        if (\"object\" === (\"undefined\" == typeof t ? \"undefined\" : o(t)) && !(t instanceof c.default)) throw new Error(\"Parameter for the gesture is not of a Gesture type\");\n        \"string\" == typeof t ? u = this.registeredGestures[t] : (u = t, \"\" === u.id && this.assignGestureId(u)), this.bindings.push(new E.default(e, u, n, r, i)), e.addEventListener(u.getId(), n, r);\n      }\n    }, {\n      key: \"retrieveBindingsByElement\",\n      value: function (e) {\n        var t = [];\n        return this.bindings.map(function (n) {\n          n.element === e && t.push(n);\n        }), t;\n      }\n    }, {\n      key: \"retrieveBindingsByInitialPos\",\n      value: function () {\n        var e = this,\n            t = [];\n        return this.bindings.forEach(function (n) {\n          var r = e.inputs.filter(function (e) {\n            return I.default.isInside(e.initial.x, e.initial.y, n.element);\n          });\n          r.length > 0 && t.push(n);\n        }), t;\n      }\n    }, {\n      key: \"updateInputs\",\n      value: function (e, t) {\n        function n(e, t, n, r) {\n          var i = I.default.normalizeEvent(e.type),\n              o = u(t.inputs, n);\n          return \"start\" === i && o ? void t.resetInputs() : \"start\" !== i && o && !I.default.isInside(o.current.x, o.current.y, r) ? void t.resetInputs() : \"start\" === i || o ? void (\"start\" === i ? t.inputs.push(new x.default(e, n)) : o.update(e, n)) : void t.resetInputs();\n        }\n\n        var r = T,\n            i = e.touches ? \"TouchEvent\" : e.pointerType ? \"PointerEvent\" : \"MouseEvent\";\n\n        switch (i) {\n          case \"TouchEvent\":\n            for (var o in e.changedTouches) e.changedTouches.hasOwnProperty(o) && I.default.isInteger(parseInt(o)) && (r = e.changedTouches[o].identifier, n(e, this, r, t));\n\n            break;\n\n          case \"PointerEvent\":\n            r = e.pointerId, n(e, this, r, t);\n            break;\n\n          case \"MouseEvent\":\n          default:\n            n(e, this, T, t);\n        }\n\n        return !0;\n      }\n    }, {\n      key: \"resetInputs\",\n      value: function () {\n        this.inputs = [];\n      }\n    }, {\n      key: \"numActiveInputs\",\n      value: function () {\n        var e = this.inputs.filter(function (e) {\n          return \"end\" !== e.current.type;\n        });\n        return e.length;\n      }\n    }, {\n      key: \"registerGesture\",\n      value: function (e, t) {\n        this.assignGestureId(e), this.registeredGestures[t] = e;\n      }\n    }, {\n      key: \"assignGestureId\",\n      value: function (e) {\n        e.setId(this.regionId + \"-\" + this.numGestures++);\n      }\n    }]), e;\n  }();\n\n  t.default = k;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var a = n(11),\n      s = r(a),\n      c = function (e) {\n    function t(e) {\n      i(this, t);\n      var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));\n      return n.type = \"expand\", n;\n    }\n\n    return o(t, e), t;\n  }(s.default);\n\n  t.default = c;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var a = function () {\n    function e(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n      }\n    }\n\n    return function (t, n, r) {\n      return n && e(t.prototype, n), r && e(t, r), t;\n    };\n  }(),\n      s = n(4),\n      c = r(s),\n      f = n(5),\n      l = r(f),\n      d = 2,\n      p = 1,\n      h = function (e) {\n    function t(e) {\n      i(this, t);\n      var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));\n      return n.type = \"distance\", n.threshold = e && e.threshold ? e.threshold : p, n;\n    }\n\n    return o(t, e), a(t, [{\n      key: \"start\",\n      value: function (e, t, n) {\n        if (!this.isValid(e, t, n)) return null;\n\n        if (e.length === d) {\n          var r = e[0].getGestureProgress(this.type);\n          r.lastEmittedDistance = l.default.distanceBetweenTwoPoints(e[0].current.x, e[1].current.x, e[0].current.y, e[1].current.y);\n        }\n      }\n    }, {\n      key: \"move\",\n      value: function (e, t, n) {\n        if (t.numActiveInputs() === d) {\n          var r = l.default.distanceBetweenTwoPoints(e[0].current.x, e[1].current.x, e[0].current.y, e[1].current.y),\n              i = l.default.distanceBetweenTwoPoints(e[0].previous.x, e[1].previous.x, e[0].previous.y, e[1].previous.y),\n              u = l.default.getMidpoint(e[0].current.x, e[1].current.x, e[0].current.y, e[1].current.y),\n              o = e[0].getGestureProgress(this.type);\n\n          if (\"Expand\" === this.constructor.name) {\n            if (r < i) o.lastEmittedDistance = r;else if (r - o.lastEmittedDistance >= this.threshold) return o.lastEmittedDistance = r, {\n              distance: r,\n              center: u\n            };\n          } else if (r > i) o.lastEmittedDistance = r;else if (r < i && o.lastEmittedDistance - r >= this.threshold) return o.lastEmittedDistance = r, {\n            distance: r,\n            center: u\n          };\n\n          return null;\n        }\n      }\n    }]), t;\n  }(c.default);\n\n  t.default = h;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var a = function () {\n    function e(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n      }\n    }\n\n    return function (t, n, r) {\n      return n && e(t.prototype, n), r && e(t, r), t;\n    };\n  }(),\n      s = n(4),\n      c = r(s),\n      f = n(5),\n      l = r(f),\n      d = 1,\n      p = 1,\n      h = function (e) {\n    function t(e) {\n      i(this, t);\n      var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));\n      return n.type = \"pan\", n.numInputs = e && e.numInputs ? e.numInputs : d, n.threshold = e && e.threshold ? e.threshold : p, n;\n    }\n\n    return o(t, e), a(t, [{\n      key: \"start\",\n      value: function (e) {\n        var t = this;\n        e.forEach(function (e) {\n          var n = e.getGestureProgress(t.getId());\n          n.active = !0, n.lastEmitted = {\n            x: e.current.x,\n            y: e.current.y\n          };\n        });\n      }\n    }, {\n      key: \"move\",\n      value: function (e, t, n) {\n        if (this.numInputs === e.length) for (var r = {\n          data: []\n        }, i = 0; i < e.length; i++) {\n          var u = e[i].getGestureProgress(this.getId()),\n              o = !1,\n              a = Math.abs(e[i].current.y - u.lastEmitted.y) > this.threshold,\n              s = Math.abs(e[i].current.x - u.lastEmitted.x) > this.threshold;\n          if (o = a || s, !u.active || !o) return null;\n          r.data[i] = {\n            distanceFromOrigin: l.default.distanceBetweenTwoPoints(e[i].initial.x, e[i].current.x, e[i].initial.y, e[i].current.y),\n            directionFromOrigin: l.default.getAngle(e[i].initial.x, e[i].initial.y, e[i].current.x, e[i].current.y),\n            currentDirection: l.default.getAngle(u.lastEmitted.x, u.lastEmitted.y, e[i].current.x, e[i].current.y)\n          }, u.lastEmitted.x = e[i].current.x, u.lastEmitted.y = e[i].current.y;\n        }\n        return r;\n      }\n    }, {\n      key: \"end\",\n      value: function (e) {\n        var t = this;\n        return e.forEach(function (e) {\n          var n = e.getGestureProgress(t.getId());\n          n.active = !1;\n        }), null;\n      }\n    }]), t;\n  }(c.default);\n\n  t.default = h;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var a = n(11),\n      s = r(a),\n      c = n(5),\n      f = (r(c), function (e) {\n    function t(e) {\n      i(this, t);\n      var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));\n      return n.type = \"pinch\", n;\n    }\n\n    return o(t, e), t;\n  }(s.default));\n  t.default = f;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var a = function () {\n    function e(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n      }\n    }\n\n    return function (t, n, r) {\n      return n && e(t.prototype, n), r && e(t, r), t;\n    };\n  }(),\n      s = n(4),\n      c = r(s),\n      f = n(5),\n      l = r(f),\n      d = 2,\n      p = function (e) {\n    function t() {\n      i(this, t);\n      var e = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));\n      return e.type = \"rotate\", e;\n    }\n\n    return o(t, e), a(t, [{\n      key: \"move\",\n      value: function (e, t, n) {\n        if (t.numActiveInputs() <= d) {\n          var r = void 0,\n              i = void 0,\n              u = void 0,\n              o = void 0;\n\n          if (1 === t.numActiveInputs()) {\n            var a = n.getBoundingClientRect();\n            r = {\n              x: a.left + a.width / 2,\n              y: a.top + a.height / 2\n            }, o = e[0], i = u = 0;\n          } else {\n            r = l.default.getMidpoint(e[0].initial.x, e[1].initial.x, e[0].initial.y, e[1].initial.y);\n            var s = l.default.getMidpoint(e[0].current.x, e[1].current.x, e[0].current.y, e[1].current.y);\n            i = r.x - s.x, u = r.y - s.y, o = l.default.getRightMostInput(e);\n          }\n\n          var c = l.default.getAngle(r.x, r.y, o.current.x + i, o.current.y + u),\n              f = o.getGestureProgress(this.getId());\n          return f.initialAngle ? (f.change = l.default.getAngularDistance(f.previousAngle, c), f.distance = f.distance + f.change) : (f.initialAngle = f.previousAngle = c, f.distance = f.change = 0), f.previousAngle = c, {\n            angle: c,\n            distanceFromOrigin: f.distance,\n            distanceFromLast: f.change\n          };\n        }\n\n        return null;\n      }\n    }]), t;\n  }(c.default);\n\n  t.default = p;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var a = function () {\n    function e(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n      }\n    }\n\n    return function (t, n, r) {\n      return n && e(t.prototype, n), r && e(t, r), t;\n    };\n  }(),\n      s = n(4),\n      c = r(s),\n      f = n(5),\n      l = r(f),\n      d = 1,\n      p = 100,\n      h = .2,\n      y = 100,\n      v = 10,\n      g = function (e) {\n    function t(e) {\n      i(this, t);\n      var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));\n      return n.type = \"swipe\", n.numInputs = e && e.numInputs ? e.numInputs : d, n.maxRestTime = e && e.maxRestTime ? e.maxRestTime : p, n.escapeVelocity = e && e.escapeVelocity ? e.escapeVelocity : h, n.timeDistortion = e && e.timeDistortion ? e.timeDistortion : y, n.maxProgressStack = e && e.maxProgressStack ? e.maxProgressStack : v, n;\n    }\n\n    return o(t, e), a(t, [{\n      key: \"move\",\n      value: function (e, t, n) {\n        if (this.numInputs === e.length) for (var r = 0; r < e.length; r++) {\n          var i = e[r].getGestureProgress(this.getId());\n          i.moves || (i.moves = []), i.moves.push({\n            time: new Date().getTime(),\n            x: e[r].current.x,\n            y: e[r].current.y\n          }), i.length > this.maxProgressStack && i.moves.shift();\n        }\n        return null;\n      }\n    }, {\n      key: \"end\",\n      value: function (e) {\n        if (this.numInputs === e.length) {\n          for (var t = {\n            data: []\n          }, n = 0; n < e.length; n++) {\n            if (\"end\" !== e[n].current.type) return;\n            var r = e[n].getGestureProgress(this.getId());\n\n            if (r.moves && r.moves.length > 2) {\n              var i = r.moves.pop();\n              if (new Date().getTime() - i.time > this.maxRestTime) return null;\n\n              for (var u = void 0, o = r.moves.length - 1; o !== -1;) {\n                if (r.moves[o].time !== i.time) {\n                  u = r.moves[o];\n                  break;\n                }\n\n                o--;\n              }\n\n              u || (u = r.moves.pop(), u.time += this.timeDistortion);\n              var a = l.default.getVelocity(u.x, u.y, u.time, i.x, i.y, i.time);\n              t.data[n] = {\n                velocity: a,\n                distance: l.default.distanceBetweenTwoPoints(u.x, i.x, u.y, i.y),\n                duration: i.time - u.time,\n                currentDirection: l.default.getAngle(u.x, u.y, i.x, i.y)\n              };\n            }\n          }\n\n          for (var n = 0; n < t.data.length; n++) if (a < this.escapeVelocity) return null;\n\n          if (t.data.length > 0) return t;\n        }\n\n        return null;\n      }\n    }]), t;\n  }(c.default);\n\n  t.default = g;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var a = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n    return typeof e;\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  },\n      s = function () {\n    function e(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n      }\n    }\n\n    return function (t, n, r) {\n      return n && e(t.prototype, n), r && e(t, r), t;\n    };\n  }(),\n      c = n(4),\n      f = r(c),\n      l = n(5),\n      d = r(l),\n      p = 0,\n      h = 300,\n      y = 1,\n      v = 10,\n      g = function (e) {\n    function t(e) {\n      i(this, t);\n      var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));\n      return n.type = \"tap\", n.minDelay = e && e.minDelay ? e.minDelay : p, n.maxDelay = e && e.maxDelay ? e.maxDelay : h, n.numInputs = e && e.numInputs ? e.numInputs : y, n.tolerance = e && e.tolerance ? e.tolerance : v, n;\n    }\n\n    return o(t, e), s(t, [{\n      key: \"start\",\n      value: function (e) {\n        var t = this;\n        return e.length === this.numInputs && e.forEach(function (e) {\n          var n = e.getGestureProgress(t.type);\n          n.start = new Date().getTime();\n        }), null;\n      }\n    }, {\n      key: \"move\",\n      value: function (e, t, n) {\n        for (var r = this, i = 0; i < e.length; i++) if (\"move\" === e[i].getCurrentEventType()) {\n          var u = e[i].current,\n              o = e[i].previous;\n\n          if (!d.default.isWithin(u.x, u.y, o.x, o.y, this.tolerance)) {\n            var s = function () {\n              var t = r.type;\n              return e.forEach(function (e) {\n                e.resetProgress(t);\n              }), {\n                v: null\n              };\n            }();\n\n            if (\"object\" === (\"undefined\" == typeof s ? \"undefined\" : a(s))) return s.v;\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: \"end\",\n      value: function (e) {\n        var t = this;\n        if (e.length !== this.numInputs) return null;\n\n        for (var n = Number.MAX_VALUE, r = 0; r < e.length; r++) {\n          if (\"end\" !== e[r].getCurrentEventType()) return null;\n          var i = e[r].getGestureProgress(this.type);\n          if (!i.start) return null;\n          i.start < n && (n = i.start);\n        }\n\n        var u = new Date().getTime() - n;\n        if (this.minDelay <= u && this.maxDelay >= u) return {\n          interval: u\n        };\n\n        var o = function () {\n          var n = t.type;\n          return e.forEach(function (e) {\n            e.resetProgress(n);\n          }), {\n            v: null\n          };\n        }();\n\n        return \"object\" === (\"undefined\" == typeof o ? \"undefined\" : a(o)) ? o.v : void 0;\n      }\n    }]), t;\n  }(f.default);\n\n  t.default = g;\n}, function (e, t) {\n  \"use strict\";\n\n  function n(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var r = function e(t, r, i, u, o) {\n    n(this, e), this.element = t, this.gesture = r, this.handler = i, this.capture = \"undefined\" != typeof u && u, this.bindOnce = \"undefined\" != typeof o && o;\n  };\n\n  t.default = r;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var u = function () {\n    function e(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n      }\n    }\n\n    return function (t, n, r) {\n      return n && e(t.prototype, n), r && e(t, r), t;\n    };\n  }(),\n      o = n(19),\n      a = r(o),\n      s = function () {\n    function e(t, n) {\n      i(this, e);\n      var r = new a.default(t, n);\n      this.initial = r, this.current = r, this.previous = r, this.identifier = \"undefined\" != typeof n ? n : 0, this.progress = {};\n    }\n\n    return u(e, [{\n      key: \"update\",\n      value: function (e, t) {\n        this.previous = this.current, this.current = new a.default(e, t);\n      }\n    }, {\n      key: \"getGestureProgress\",\n      value: function (e) {\n        return this.progress[e] || (this.progress[e] = {}), this.progress[e];\n      }\n    }, {\n      key: \"getCurrentEventType\",\n      value: function () {\n        return this.current.type;\n      }\n    }, {\n      key: \"resetProgress\",\n      value: function (e) {\n        this.progress[e] = {};\n      }\n    }]), e;\n  }();\n\n  t.default = s;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n\n  var u = n(5),\n      o = r(u),\n      a = 0,\n      s = function e(t, n) {\n    i(this, e), this.originalEvent = t, this.type = o.default.normalizeEvent(t.type), this.x = a, this.y = a;\n    var r = void 0;\n\n    if (t.touches && t.changedTouches) {\n      for (var u = 0; u < t.changedTouches.length; u++) if (t.changedTouches[u].identifier === n) {\n        r = t.changedTouches[u];\n        break;\n      }\n    } else r = t;\n\n    this.x = this.clientX = r.clientX, this.y = this.clientY = r.clientY, this.pageX = r.pageX, this.pageY = r.pageY, this.screenX = r.screenX, this.screenY = r.screenY;\n  };\n\n  t.default = s;\n}]);","map":{"version":3,"sources":["webpack:///dist/zingtouch.min.js","webpack:/webpack/bootstrap ba963050fa137fcec55a","webpack:///src/core/main.js","webpack:///src/ZingTouch.js","webpack:///src/core/classes/Region.js","webpack:///src/core/classes/Binder.js","webpack:///src/gestures/Gesture.js","webpack:///src/core/util.js","webpack:///src/core/arbiter.js","webpack:///src/core/dispatcher.js","webpack:///src/core/interpreter.js","webpack:///src/core/classes/State.js","webpack:///src/gestures/Expand.js","webpack:///src/gestures/Distance.js","webpack:///src/gestures/Pan.js","webpack:///src/gestures/Pinch.js","webpack:///src/gestures/Rotate.js","webpack:///src/gestures/Swipe.js","webpack:///src/gestures/Tap.js","webpack:///src/core/classes/Binding.js","webpack:///src/core/classes/Input.js","webpack:///src/core/classes/ZingEvent.js"],"names":["modules","module","exports","__webpack_require__","_ZingTouch2","_interopRequireDefault","_ZingTouch","obj","__esModule","default","Object","defineProperty","value","_Region3","_Region2","_Gesture2","_Gesture","_Expand2","_Expand","_Pan2","_Pan","_Pinch2","_Pinch","_Rotate2","_Rotate","_Swipe2","_Swipe","_Tap2","_Tap","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_Binder2","_Binder","_arbiter2","_arbiter","_State2","_State","_classCallCheck","instance","TypeError","Region","_util2","_util","Gesture","_dispatcher2","_dispatcher","_interpreter2","_interpreter","_typeof","Symbol","iterator","constructor","_Binding2","_Binding","_Input2","_Input","State","_Distance3","_Distance2","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_Distance","Expand","_Gesture3","Distance","Pan","Pinch","Rotate","Swipe","Tap","_ZingEvent2","_ZingEvent","Input","id","loaded","window","ZingTouch","_regions","element","capture","preventDefault","region","push","this","state","eventNames","PointerEvent","TouchEvent","map","name","addEventListener","e","_this","gesture","handler","bindOnce","tagName","addBinding","bind","bindings","retrieveBindingsByElement","unbound","forEach","binding","_this2","registeredGestures","registeredGesture","removeEventListener","getId","Error","setType","registerGesture","getType","Binder","keys","type","object","inputs","valid","input","isInside","initial","x","y","CIRCLE_DEGREES","HALF_CIRCLE_DEGREES","util","normalizeEvent","isWithin","currentX","currentY","previousX","previousY","tolerance","Math","abs","distanceBetweenTwoPoints","x0","x1","y0","y1","dist","sqrt","round","getMidpoint","getAngle","originX","originY","projectionX","projectionY","angle","atan2","PI","getAngularDistance","start","end","sign","getVelocity","startX","startY","startTime","endX","endY","endTime","distance","getRightMostInput","rightMost","Number","MIN_VALUE","isInteger","rect","getBoundingClientRect","left","width","top","height","getPropagationPath","event","path","node","document","parentNode","getPathIndex","index","setMSPreventDefault","style","removeMSPreventDefault","arbiter","buttons","resetInputs","updateInputs","retrieveBindingsByInitialPos","returnValue","toBeDispatched","gestures","data","events","endCount","getCurrentEventType","dispatcher","newEvent","CustomEvent","detail","bubbles","cancelable","emitEvent","dispatchEvent","unbind","interpreter","evType","candidates","result","current","DEFAULT_MOUSE_ID","regionId","numGestures","boundGesture","indexOf","assignGestureId","matches","inputsInside","filter","regionElement","identifier","eventType","touches","pointerType","changedTouches","hasOwnProperty","parseInt","update","pointerId","findInputById","endType","setId","options","DEFAULT_INPUTS","DEFAULT_MIN_THRESHOLD","threshold","isValid","progress","getGestureProgress","lastEmittedDistance","numActiveInputs","currentDistance","lastDistance","previous","centerPoint","center","numInputs","active","lastEmitted","output","reachedThreshold","yThreshold","xThreshold","distanceFromOrigin","directionFromOrigin","currentDirection","_this3","MAX_INPUTS","referencePivot","diffX","diffY","bRect","currentPivot","currentAngle","initialAngle","previousAngle","change","distanceFromLast","DEFAULT_MAX_REST_TIME","DEFAULT_ESCAPE_VELOCITY","DEFAULT_TIME_DISTORTION","DEFAULT_MAX_PROGRESS_STACK","maxRestTime","escapeVelocity","timeDistortion","maxProgressStack","moves","time","Date","getTime","shift","currentMove","pop","lastMove","velocity","duration","DEFAULT_MIN_DELAY_MS","DEFAULT_MAX_DELAY_MS","DEFAULT_MOVE_PX_TOLERANCE","minDelay","maxDelay","resetProgress","MAX_VALUE","interval","_this4","Binding","currentEvent","touchIdentifier","INITIAL_COORDINATE","ZingEvent","originalEvent","eventObj","clientX","clientY","pageX","pageY","screenX","screenY"],"mappings":"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","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ZingTouch = __webpack_require__(1);\n\t\n\tvar _ZingTouch2 = _interopRequireDefault(_ZingTouch);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\twindow.ZingTouch = _ZingTouch2.default; /**\n\t                                         * @file main.js\n\t                                         * Main file to setup event listeners on the document,\n\t                                         * and to expose the ZingTouch object\n\t                                         */\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Region2 = __webpack_require__(2);\n\t\n\tvar _Region3 = _interopRequireDefault(_Region2);\n\t\n\tvar _Gesture = __webpack_require__(4);\n\t\n\tvar _Gesture2 = _interopRequireDefault(_Gesture);\n\t\n\tvar _Expand = __webpack_require__(10);\n\t\n\tvar _Expand2 = _interopRequireDefault(_Expand);\n\t\n\tvar _Pan = __webpack_require__(12);\n\t\n\tvar _Pan2 = _interopRequireDefault(_Pan);\n\t\n\tvar _Pinch = __webpack_require__(13);\n\t\n\tvar _Pinch2 = _interopRequireDefault(_Pinch);\n\t\n\tvar _Rotate = __webpack_require__(14);\n\t\n\tvar _Rotate2 = _interopRequireDefault(_Rotate);\n\t\n\tvar _Swipe = __webpack_require__(15);\n\t\n\tvar _Swipe2 = _interopRequireDefault(_Swipe);\n\t\n\tvar _Tap = __webpack_require__(16);\n\t\n\tvar _Tap2 = _interopRequireDefault(_Tap);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * The global API interface for ZingTouch. Contains a constructor for the\n\t * Region Object, and constructors for each predefined Gesture.\n\t * @type {Object}\n\t * @namespace ZingTouch\n\t */\n\t/**\n\t * @file ZingTouch.js\n\t * Main object containing API methods and Gesture constructors\n\t */\n\t\n\tvar ZingTouch = {\n\t  _regions: [],\n\t\n\t  // Constructors\n\t  Gesture: _Gesture2.default,\n\t  Expand: _Expand2.default,\n\t  Pan: _Pan2.default,\n\t  Pinch: _Pinch2.default,\n\t  Rotate: _Rotate2.default,\n\t  Swipe: _Swipe2.default,\n\t  Tap: _Tap2.default,\n\t  Region: function Region(element, capture, preventDefault) {\n\t    var id = ZingTouch._regions.length;\n\t    var region = new _Region3.default(element, capture, preventDefault, id);\n\t    ZingTouch._regions.push(region);\n\t    return region;\n\t  }\n\t};\n\t\n\texports.default = ZingTouch;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tfile Region.js\n\tn\t\n\tvar _Binder = __webpack_require__(3);\n\t\n\tvar _Binder2 = _interopRequireDefault(_Binder);\n\t\n\tvar _Gesture = __webpack_require__(4);\n\t\n\tvar _Gesture2 = _interopRequireDefault(_Gesture);\n\t\n\tvar _arbiter = __webpack_require__(6);\n\t\n\tvar _arbiter2 = _interopRequireDefault(_arbiter);\n\t\n\tvar _State = __webpack_require__(9);\n\t\n\tvar _State2 = _interopRequireDefault(_State);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Allows the user to specify a region to capture all events to feed ZingTouch\n\t * into. This can be as narrow as the element itself, or as big as the document\n\t * itself. The more specific an area, the better performant the overall\n\t * application will perform. Contains API methods to bind/unbind specific\n\t * elements to corresponding gestures. Also contains the ability to\n\t * register/unregister new gestures.\n\t * @class Region\n\t */\n\tvar Region = function () {\n\t\n\t  /**\n\t   * Constructor function for the Region class.\n\t   * @param {Element} element - The element to capture all\n\t   *  window events in that region to feed into ZingTouch.\n\t   * @param {boolean} [capture=false] - Whether the region listens for\n\t   *  captures or bubbles.\n\t   * @param {boolean} [preventDefault=true] - Whether the default browser\n\t   *  functionality should be disabled;\n\t   * @param {Number} id - The id of the region, assigned by the ZingTouch object\n\t   */\n\t  function Region(element, capture, preventDefault, id) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Region);\n\t\n\t    /**\n\t     * The identifier for the Region. This is assigned by the ZingTouch object\n\t     * and is used to hash gesture id for uniqueness.\n\t     * @type {Number}\n\t     */\n\t    this.id = id;\n\t\n\t    /**\n\t     * The element being bound to.\n\t     * @type {Element}\n\t     */\n\t    this.element = element;\n\t\n\t    /**\n\t     * Whether the region listens for captures or bubbles.\n\t     * @type {boolean}\n\t     */\n\t    this.capture = typeof capture !== 'undefined' ? capture : false;\n\t\n\t    /**\n\t     * Boolean to disable browser functionality such as scrolling and zooming\n\t     * over the region\n\t     * @type {boolean}\n\t     */\n\t    this.preventDefault = typeof preventDefault !== 'undefined' ? preventDefault : true;\n\t\n\t    /**\n\t     * The internal state object for a Region.\n\t     * Keeps track of registered gestures, inputs, and events.\n\t     * @type {State}\n\t     */\n\t    this.state = new _State2.default(id);\n\t\n\t    var eventNames = [];\n\t    if (window.PointerEvent && !window.TouchEvent) {\n\t      eventNames = ['pointerdown', 'pointermove', 'pointerup'];\n\t    } else {\n\t      eventNames = ['mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend'];\n\t    }\n\t\n\t    // Bind detected browser events to the region element.\n\t    eventNames.map(function (name) {\n\t      element.addEventListener(name, function (e) {\n\t        (0, _arbiter2.default)(e, _this);\n\t      }, _this.capture);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Bind an element to a registered/unregistered gesture with\n\t   * multiple function signatures.\n\t   * @example\n\t   * bind(element) - chainable\n\t   * @example\n\t   * bind(element, gesture, handler, [capture])\n\t   * @param {Element} element - The element object.\n\t   * @param {String|Object} [gesture] - Gesture key, or a Gesture object.\n\t   * @param {Function} [handler] - The function to execute when an event is\n\t   *  emitted.\n\t   * @param {Boolean} [capture] - capture/bubble\n\t   * @param {Boolean} [bindOnce = false] - Option to bind once and\n\t   *  only emit the event once.\n\t   * @return {Object} - a chainable object that has the same function as bind.\n\t   */\n\t\n\t\n\t  _createClass(Region, [{\n\t    key: 'bind',\n\t    value: function bind(element, gesture, handler, capture, bindOnce) {\n\t      if (!element || element && !element.tagName) {\n\t        throw 'Bind must contain an element';\n\t      }\n\t\n\t      bindOnce = typeof bindOnce !== 'undefined' ? bindOnce : false;\n\t      if (!gesture) {\n\t        return new _Binder2.default(element, bindOnce, this.state);\n\t      } else {\n\t        this.state.addBinding(element, gesture, handler, capture, bindOnce);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Bind an element and sets up actions to remove the binding once\n\t     * it has been emitted for the first time.\n\t     * 1. bind(element) - chainable\n\t     * 2. bind(element, gesture, handler, [capture])\n\t     * @param {Element} element - The element object.\n\t     * @param {String|Object} gesture - Gesture key, or a Gesture object.\n\t     * @param {Function} handler - The function to execute when an\n\t     *  event is emitted.\n\t     * @param {Boolean} capture - capture/bubble\n\t     * @return {Object} - a chainable object that has the same function as bind.\n\t     */\n\t\n\t  }, {\n\t    key: 'bindOnce',\n\t    value: function bindOnce(element, gesture, handler, capture) {\n\t      this.bind(element, gesture, handler, capture, true);\n\t    }\n\t\n\t    /**\n\t     * Unbinds an element from either the specified gesture\n\t     *  or all if no element is specified.\n\t     * @param {Element} element -The element to remove.\n\t     * @param {String | Object} [gesture] - A String representing the gesture,\n\t     *   or the actual object being used.\n\t     * @return {Array} - An array of Bindings that were unbound to the element;\n\t     */\n\t\n\t  }, {\n\t    key: 'unbind',\n\t    value: function unbind(element, gesture) {\n\t      var _this2 = this;\n\t\n\t      var bindings = this.state.retrieveBindingsByElement(element);\n\t      var unbound = [];\n\t\n\t      bindings.forEach(function (binding) {\n\t        if (gesture) {\n\t          if (typeof gesture === 'string' && _this2.state.registeredGestures[gesture]) {\n\t            var registeredGesture = _this2.state.registeredGestures[gesture];\n\t            if (registeredGesture.id === binding.gesture.id) {\n\t              element.removeEventListener(binding.gesture.getId(), binding.handler, binding.capture);\n\t              unbound.push(binding);\n\t            }\n\t          }\n\t        } else {\n\t          element.removeEventListener(binding.gesture.getId(), binding.handler, binding.capture);\n\t          unbound.push(binding);\n\t        }\n\t      });\n\t\n\t      return unbound;\n\t    }\n\t\n\t    /* unbind*/\n\t\n\t    /**\n\t     * Registers a new gesture with an assigned key\n\t     * @param {String} key - The key used to register an element to that gesture\n\t     * @param {Gesture} gesture - A gesture object\n\t     */\n\t\n\t  }, {\n\t    key: 'register',\n\t    value: function register(key, gesture) {\n\t      if (typeof key !== 'string') {\n\t        throw new Error('Parameter key is an invalid string');\n\t      }\n\t\n\t      if (!gesture instanceof _Gesture2.default) {\n\t        throw new Error('Parameter gesture is an invalid Gesture object');\n\t      }\n\t\n\t      gesture.setType(key);\n\t      this.state.registerGesture(gesture, key);\n\t    }\n\t\n\t    /* register*/\n\t\n\t    /**\n\t     * Un-registers a gesture from the Region's state such that\n\t     * it is no longer emittable.\n\t     * Unbinds all events that were registered with the type.\n\t     * @param {String|Object} key - Gesture key that was used to\n\t     *  register the object\n\t     * @return {Object} - The Gesture object that was unregistered\n\t     *  or null if it could not be found.\n\t     */\n\t\n\t  }, {\n\t    key: 'unregister',\n\t    value: function unregister(key) {\n\t      this.state.bindings.forEach(function (binding) {\n\t        if (binding.gesture.getType() === key) {\n\t          binding.element.removeEventListener(binding.gesture.getId(), binding.handler, binding.capture);\n\t        }\n\t      });\n\t\n\t      var registeredGesture = this.state.registeredGestures[key];\n\t      delete this.state.registeredGestures[key];\n\t      return registeredGesture;\n\t    }\n\t  }]);\n\t\n\t  return Region;\n\t}();\n\t\n\texports.default = Region;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @file Binder.js\n\t */\n\t\n\t/**\n\t * A chainable object that contains a single element to be bound upon.\n\t * Called from ZingTouch.bind(), and is used to chain over gesture callbacks.\n\t * @class\n\t */\n\tvar Binder =\n\t/**\n\t * Constructor function for the Binder class.\n\t * @param {Element} element - The element to bind gestures to.\n\t * @param {Boolean} bindOnce - Option to bind once and only emit\n\t * the event once.\n\t * @param {Object} state - The state of the Region that is being bound to.\n\t * @return {Object} - Returns 'this' to be chained over and over again.\n\t */\n\tfunction Binder(element, bindOnce, state) {\n\t  var _this = this;\n\t\n\t  _classCallCheck(this, Binder);\n\t\n\t  /**\n\t   * The element to bind gestures to.\n\t   * @type {Element}\n\t   */\n\t  this.element = element;\n\t\n\t  Object.keys(state.registeredGestures).forEach(function (key) {\n\t    _this[key] = function (handler, capture) {\n\t      state.addBinding(_this.element, key, handler, capture, bindOnce);\n\t      return _this;\n\t    };\n\t  });\n\t};\n\t\n\texports.default = Binder;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @file Gesture.js\n\tontains the Gesture class\n\tn\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * The Gesture class that all gestures inherit from.\n\t */\n\tvar Gesture = function () {\n\t  /**\n\t   * Constructor function for the Gesture class.\n\t   * @class Gesture\n\t   */\n\t  function Gesture() {\n\t    _classCallCheck(this, Gesture);\n\t\n\t    /**\n\t     * The generic string type of gesture ('expand'|'pan'|'pinch'|\n\t     *  'rotate'|'swipe'|'tap').\n\t     * @type {String}\n\t     */\n\t    this.type = null;\n\t\n\t    /**\n\t     * The unique identifier for each gesture determined at bind time by the\n\t     * state object. This allows for distinctions across instance variables of\n\t     * Gestures that are created on the fly (e.g. Tap-1, Tap-2, etc).\n\t     * @type {String|null}\n\t     */\n\t    this.id = null;\n\t  }\n\t\n\t  /**\n\t   * Set the type of the gesture to be called during an event\n\t   * @param {String} type - The unique identifier of the gesture being created.\n\t   */\n\t\n\t\n\t  _createClass(Gesture, [{\n\t    key: 'setType',\n\t    value: function setType(type) {\n\t      this.type = type;\n\t    }\n\t\n\t    /**\n\t     * getType() - Returns the generic type of the gesture\n\t     * @return {String} - The type of gesture\n\t     */\n\t\n\t  }, {\n\t    key: 'getType',\n\t    value: function getType() {\n\t      return this.type;\n\t    }\n\t\n\t    /**\n\t     * Set the id of the gesture to be called during an event\n\t     * @param {String} id - The unique identifier of the gesture being created.\n\t     */\n\t\n\t  }, {\n\t    key: 'setId',\n\t    value: function setId(id) {\n\t      this.id = id;\n\t    }\n\t\n\t    /**\n\t     * Return the id of the event. If the id does not exist, return the type.\n\t     * @return {String}\n\t     */\n\t\n\t  }, {\n\t    key: 'getId',\n\t    value: function getId() {\n\t      return this.id !== null ? this.id : this.type;\n\t    }\n\t\n\t    /**\n\t     * Updates internal properties with new ones, only if the properties exist.\n\t     * @param {Object} object\n\t     */\n\t\n\t  }, {\n\t    key: 'update',\n\t    value: function update(object) {\n\t      for (var key in object) {\n\t        if (this[key]) {\n\t          this[key] = object[key];\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * start() - Event hook for the start of a gesture\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t    * @param {Object} state - The state object of the current region.\n\t    * @param {Element} element - The element associated to the binding.\n\t     * @return {null|Object}  - Default of null\n\t     */\n\t\n\t  }, {\n\t    key: 'start',\n\t    value: function start(inputs, state, element) {\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * move() - Event hook for the move of a gesture\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t     * @param {Object} state - The state object of the current region.\n\t     * @param {Element} element - The element associated to the binding.\n\t     * @return {null|Object} - Default of null\n\t     */\n\t\n\t  }, {\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * end() - Event hook for the move of a gesture\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t     * @return {null|Object}  - Default of null\n\t     */\n\t\n\t  }, {\n\t    key: 'end',\n\t    value: function end(inputs) {\n\t      return null;\n\t    }\n\t\n\t    /**\n\t    * isValid() - Pre-checks to ensure the invariants of a gesture are satisfied.\n\t    * @param {Array} inputs - The array of Inputs on the screen\n\t    * @param {Object} state - The state object of the current region.\n\t    * @param {Element} element - The element associated to the binding.\n\t    * @return {boolean} - If the gesture is valid\n\t    */\n\t\n\t  }, {\n\t    key: 'isValid',\n\t    value: function isValid(inputs, state, element) {\n\t      var valid = true;\n\t      // Checks to see if all touches originated from within the target element.\n\t      if (inputs.length > 1) {\n\t        inputs.forEach(function (input) {\n\t          if (!_util2.default.isInside(input.initial.x, input.initial.y, element)) {\n\t            valid = false;\n\t          }\n\t        });\n\t      }\n\t      return valid;\n\t    }\n\t  }]);\n\t\n\t  return Gesture;\n\t}();\n\t\n\texports.default = Gesture;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @file util.js\n\t * Various accessor and mutator functions to handle state and validation.\n\t */\n\t\n\tvar CIRCLE_DEGREES = 360;\n\tvar HALF_CIRCLE_DEGREES = 180;\n\t\n\t/**\n\t *  Contains generic helper functions\n\t * @type {Object}\n\t * @namespace util\n\t */\n\tvar util = {\n\t\n\t  /**\n\t   * Normalizes window events to be either of type start, move, or end.\n\t   * @param {String} type - The event type emitted by the browser\n\t   * @return {null|String} - The normalized event, or null if it is an\n\t   * event not predetermined.\n\t   */\n\t  normalizeEvent: function normalizeEvent(type) {\n\t    switch (type) {\n\t      case 'mousedown':\n\t      case 'touchstart':\n\t      case 'pointerdown':\n\t        return 'start';\n\t      case 'mousemove':\n\t      case 'touchmove':\n\t      case 'pointermove':\n\t        return 'move';\n\t      case 'mouseup':\n\t      case 'touchend':\n\t      case 'pointerup':\n\t        return 'end';\n\t      default:\n\t        return null;\n\t    }\n\t  },\n\t\n\t  /* normalizeEvent*/\n\t\n\t  /**\n\t   * Determines if the current and previous coordinates are within or\n\t   * up to a certain tolerance.\n\t   * @param {Number} currentX - Current event's x coordinate\n\t   * @param {Number} currentY - Current event's y coordinate\n\t   * @param {Number} previousX - Previous event's x coordinate\n\t   * @param {Number} previousY - Previous event's y coordinate\n\t   * @param {Number} tolerance - The tolerance in pixel value.\n\t   * @return {boolean} - true if the current coordinates are\n\t   * within the tolerance, false otherwise\n\t   */\n\t  isWithin: function isWithin(currentX, currentY, previousX, previousY, tolerance) {\n\t    return Math.abs(currentY - previousY) <= tolerance && Math.abs(currentX - previousX) <= tolerance;\n\t  },\n\t\n\t  /* isWithin*/\n\t\n\t  /**\n\t   * Calculates the distance between two points.\n\t   * @param {Number} x0\n\t   * @param {Number} x1\n\t   * @param {Number} y0\n\t   * @param {Number} y1\n\t   * @return {number} The numerical value between two points\n\t   */\n\t  distanceBetweenTwoPoints: function distanceBetweenTwoPoints(x0, x1, y0, y1) {\n\t    var dist = Math.sqrt((x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0));\n\t    return Math.round(dist * 100) / 100;\n\t  },\n\t\n\t\n\t  /**\n\t   * Calculates the midpoint coordinates between two points.\n\t   * @param {Number} x0\n\t   * @param {Number} x1\n\t   * @param {Number} y0\n\t   * @param {Number} y1\n\t   * @return {Object} The coordinates of the midpoint.\n\t   */\n\t  getMidpoint: function getMidpoint(x0, x1, y0, y1) {\n\t    return {\n\t      x: (x0 + x1) / 2,\n\t      y: (y0 + y1) / 2\n\t    };\n\t  },\n\t\n\t  /**\n\t   * Calculates the angle between the projection and an origin point.\n\t   *   |                (projectionX,projectionY)\n\t   *   |             /°\n\t   *   |          /\n\t   *   |       /\n\t   *   |    / θ\n\t   *   | /__________\n\t   *   ° (originX, originY)\n\t   * @param {number} originX\n\t   * @param {number} originY\n\t   * @param {number} projectionX\n\t   * @param {number} projectionY\n\t   * @return {number} - Degree along the unit circle where the project lies\n\t   */\n\t  getAngle: function getAngle(originX, originY, projectionX, projectionY) {\n\t    var angle = Math.atan2(projectionY - originY, projectionX - originX) * (HALF_CIRCLE_DEGREES / Math.PI);\n\t    return CIRCLE_DEGREES - (angle < 0 ? CIRCLE_DEGREES + angle : angle);\n\t  },\n\t\n\t  /**\n\t   * Calculates the angular distance in degrees between two angles\n\t   *  along the unit circle\n\t   * @param {number} start - The starting point in degrees\n\t   * @param {number} end - The ending point in degrees\n\t   * @return {number} The number of degrees between the\n\t   * starting point and ending point. Negative degrees denote a clockwise\n\t   * direction, and positive a counter-clockwise direction.\n\t   */\n\t  getAngularDistance: function getAngularDistance(start, end) {\n\t    var angle = (end - start) % CIRCLE_DEGREES;\n\t    var sign = angle < 0 ? 1 : -1;\n\t    angle = Math.abs(angle);\n\t    return angle > HALF_CIRCLE_DEGREES ? sign * (CIRCLE_DEGREES - angle) : sign * angle;\n\t  },\n\t\n\t\n\t  /**\n\t   * Calculates the velocity of pixel/milliseconds between two points\n\t   * @param {Number} startX\n\t   * @param {Number} startY\n\t   * @param {Number} startTime\n\t   * @param {Number} endX\n\t   * @param {Number} endY\n\t   * @param {Number} endTime\n\t   * @return {Number} velocity of px/time\n\t   */\n\t  getVelocity: function getVelocity(startX, startY, startTime, endX, endY, endTime) {\n\t    var distance = this.distanceBetweenTwoPoints(startX, endX, startY, endY);\n\t    return distance / (endTime - startTime);\n\t  },\n\t\n\t\n\t  /**\n\t   * Returns the farthest right input\n\t   * @param {Array} inputs\n\t   * @return {Object}\n\t   */\n\t  getRightMostInput: function getRightMostInput(inputs) {\n\t    var rightMost = null;\n\t    var distance = Number.MIN_VALUE;\n\t    inputs.forEach(function (input) {\n\t      if (input.initial.x > distance) {\n\t        rightMost = input;\n\t      }\n\t    });\n\t    return rightMost;\n\t  },\n\t\n\t\n\t  /**\n\t   * Determines is the value is an integer and not a floating point\n\t   * @param {Mixed} value\n\t   * @return {boolean}\n\t   */\n\t  isInteger: function isInteger(value) {\n\t    return typeof value === 'number' && value % 1 === 0;\n\t  },\n\t\n\t\n\t  /**\n\t   * Determines if the x,y position of the input is within then target.\n\t   * @param {Number} x -clientX\n\t   * @param {Number} y -clientY\n\t   * @param {Element} target\n\t   * @return {Boolean}\n\t   */\n\t  isInside: function isInside(x, y, target) {\n\t    var rect = target.getBoundingClientRect();\n\t    return x > rect.left && x < rect.left + rect.width && y > rect.top && y < rect.top + rect.height;\n\t  },\n\t\n\t  /**\n\t   * Polyfill for event.propagationPath\n\t   * @param {Event} event\n\t   * @return {Array}\n\t   */\n\t  getPropagationPath: function getPropagationPath(event) {\n\t    if (event.path) {\n\t      return event.path;\n\t    } else {\n\t      var path = [];\n\t      var node = event.target;\n\t      while (node != document) {\n\t        path.push(node);\n\t        node = node.parentNode;\n\t      }\n\t\n\t      return path;\n\t    }\n\t  },\n\t\n\t\n\t  /**\n\t   * Retrieve the index inside the path array\n\t   * @param {Array} path\n\t   * @param {Element} element\n\t   * @return {Element}\n\t   */\n\t  getPathIndex: function getPathIndex(path, element) {\n\t    var index = path.length;\n\t\n\t    path.forEach(function (obj, i) {\n\t      if (obj === element) {\n\t        index = i;\n\t      }\n\t    });\n\t\n\t    return index;\n\t  },\n\t  setMSPreventDefault: function setMSPreventDefault(element) {\n\t    element.style['-ms-content-zooming'] = 'none';\n\t    element.style['touch-action'] = 'none';\n\t  },\n\t  removeMSPreventDefault: function removeMSPreventDefault(element) {\n\t    element.style['-ms-content-zooming'] = '';\n\t    element.style['touch-action'] = '';\n\t  }\n\t};\n\texports.default = util;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _dispatcher = __webpack_require__(7);\n\t\n\tvar _dispatcher2 = _interopRequireDefault(_dispatcher);\n\t\n\tvar _interpreter = __webpack_require__(8);\n\t\n\tvar _interpreter2 = _interopRequireDefault(_interpreter);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Function that handles event flow, negotiating with the interpreter,\n\t * and dispatcher.\n\t * 1. Receiving all touch events in the window.\n\t * 2. Determining which gestures are linked to the target element.\n\t * 3. Negotiating with the Interpreter what event should occur.\n\t * 4. Sending events to the dispatcher to emit events to the target.\n\t * @param {Event} event - The event emitted from the window object.\n\t * @param {Object} region - The region object of the current listener.\n\t */\n\tfunction arbiter(event, region) {\n\t  var state = region.state;\n\t\n\t  /*\n\t   Return if a gesture is not in progress and won't be. Also catches the case\n\t   where a previous event is in a partial state (2 finger pan, waits for both\n\t   inputs to reach touchend)\n\t   */\n\t  if (state.inputs.length === 0 && _util2.default.normalizeEvent(event.type) !== 'start') {\n\t    return;\n\t  }\n\t\n\t  /*\n\t   Check for 'stale' or events that lost focus\n\t   (e.g. a pan goes off screen/off region.)\n\t   Does not affect mobile devices.\n\t   */\n\t  if (typeof event.buttons !== 'undefined' && _util2.default.normalizeEvent(event.type) !== 'end' && event.buttons === 0) {\n\t    state.resetInputs();\n\t    return;\n\t  }\n\t\n\t  // Update the state with the new events. If the event is stopped, return;\n\t  if (!state.updateInputs(event, region.element)) {\n\t    return;\n\t  }\n\t\n\t  // Retrieve the initial target from any one of the inputs\n\t  var bindings = state.retrieveBindingsByInitialPos();\n\t  if (bindings.length > 0) {\n\t    (function () {\n\t      if (region.preventDefault) {\n\t        _util2.default.setMSPreventDefault(region.element);\n\t        event.preventDefault ? event.preventDefault() : event.returnValue = false;\n\t      } else {\n\t        _util2.default.removeMSPreventDefault(region.element);\n\t      }\n\t\n\t      var toBeDispatched = {};\n\t      var gestures = (0, _interpreter2.default)(bindings, event, state);\n\t\n\t      /* Determine the deepest path index to emit the event\n\t       from, to avoid duplicate events being fired. */\n\t\n\t      gestures.forEach(function (gesture) {\n\t        var id = gesture.binding.gesture.id;\n\t        if (toBeDispatched[id]) {\n\t          var path = _util2.default.getPropagationPath(event);\n\t          if (_util2.default.getPathIndex(path, gesture.binding.element) < _util2.default.getPathIndex(path, toBeDispatched[id].binding.element)) {\n\t            toBeDispatched[id] = gesture;\n\t          }\n\t        } else {\n\t          toBeDispatched[id] = gesture;\n\t        }\n\t      });\n\t\n\t      Object.keys(toBeDispatched).forEach(function (index) {\n\t        var gesture = toBeDispatched[index];\n\t        (0, _dispatcher2.default)(gesture.binding, gesture.data, gesture.events);\n\t      });\n\t    })();\n\t  }\n\t\n\t  var endCount = 0;\n\t  state.inputs.forEach(function (input) {\n\t    if (input.getCurrentEventType() === 'end') {\n\t      endCount++;\n\t    }\n\t  });\n\t\n\t  if (endCount === state.inputs.length) {\n\t    state.resetInputs();\n\t  }\n\t} /**\n\t   * @file arbiter.js\n\t   * Contains logic for the dispatcher\n\t   */\n\t\n\texports.default = arbiter;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @file dispatcher.js\n\t * Contains logic for the dispatcher\n\t */\n\t\n\t/**\n\t * Emits data at the target element if available, and bubbles up from\n\t * the target to the parent until the document has been reached.\n\t * Called from the arbiter.\n\t * @param {Binding} binding - An object of type Binding\n\t * @param {Object} data - The metadata computed by the gesture being emitted.\n\t * @param {Array} events - An array of ZingEvents\n\t *  corresponding to the inputs on the screen.\n\t */\n\tfunction dispatcher(binding, data, events) {\n\t  data.events = events;\n\t\n\t  var newEvent = new CustomEvent(binding.gesture.getId(), {\n\t    detail: data,\n\t    bubbles: true,\n\t    cancelable: true\n\t  });\n\t  emitEvent(binding.element, newEvent, binding);\n\t}\n\t\n\t/**\n\t * Emits the new event. Unbinds the event if the event was registered\n\t * at bindOnce.\n\t * @param {Element} target - Element object to emit the event to.\n\t * @param {Event} event - The CustomEvent to emit.\n\t * @param {Binding} binding - An object of type Binding\n\t */\n\tfunction emitEvent(target, event, binding) {\n\t  target.dispatchEvent(event);\n\t  if (binding.bindOnce) {\n\t    ZingTouch.unbind(binding.element, binding.gesture.getType());\n\t  }\n\t}\n\t\n\texports.default = dispatcher;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Receives an event and an array of Bindings (element -> gesture handler)\n\t * to determine what event will be emitted. Called from the arbiter.\n\t * @param {Array} bindings - An array containing Binding objects\n\t * that associate the element to an event handler.\n\t * @param {Object} event - The event emitted from the window.\n\t * @param {Object} state - The state object of the current listener.\n\t * @return {Object | null} - Returns an object containing a binding and\n\t * metadata, or null if a gesture will not be emitted.\n\t */\n\tfunction interpreter(bindings, event, state) {\n\t  var evType = _util2.default.normalizeEvent(event.type);\n\t  var candidates = [];\n\t  bindings.forEach(function (binding) {\n\t    var result = binding.gesture[evType](state.inputs, state, binding.element);\n\t    if (result) {\n\t      (function () {\n\t        var events = [];\n\t        state.inputs.forEach(function (input) {\n\t          events.push(input.current);\n\t        });\n\t\n\t        candidates.push({\n\t          binding: binding,\n\t          data: result,\n\t          events: events\n\t        });\n\t      })();\n\t    }\n\t  });\n\t\n\t  return candidates;\n\t} /**\n\t   * @file interpreter.js\n\t   * Contains logic for the interpreter\n\t   */\n\t\n\texports.default = interpreter;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tfile State.js\n\tn\t\n\tvar _Gesture = __webpack_require__(4);\n\t\n\tvar _Gesture2 = _interopRequireDefault(_Gesture);\n\t\n\tvar _Expand = __webpack_require__(10);\n\t\n\tvar _Expand2 = _interopRequireDefault(_Expand);\n\t\n\tvar _Pan = __webpack_require__(12);\n\t\n\tvar _Pan2 = _interopRequireDefault(_Pan);\n\t\n\tvar _Pinch = __webpack_require__(13);\n\t\n\tvar _Pinch2 = _interopRequireDefault(_Pinch);\n\t\n\tvar _Rotate = __webpack_require__(14);\n\t\n\tvar _Rotate2 = _interopRequireDefault(_Rotate);\n\t\n\tvar _Swipe = __webpack_require__(15);\n\t\n\tvar _Swipe2 = _interopRequireDefault(_Swipe);\n\t\n\tvar _Tap = __webpack_require__(16);\n\t\n\tvar _Tap2 = _interopRequireDefault(_Tap);\n\t\n\tvar _Binding = __webpack_require__(17);\n\t\n\tvar _Binding2 = _interopRequireDefault(_Binding);\n\t\n\tvar _Input = __webpack_require__(18);\n\t\n\tvar _Input2 = _interopRequireDefault(_Input);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DEFAULT_MOUSE_ID = 0;\n\t\n\t/**\n\t * Creates an object related to a Region's state,\n\t * and contains helper methods to update and clean up different states.\n\t */\n\t\n\tvar State = function () {\n\t\n\t  /**\n\t   * Constructor for the State class.\n\t   * @param {String} regionId - The id the region this state is bound to.\n\t   */\n\t  function State(regionId) {\n\t    _classCallCheck(this, State);\n\t\n\t    /**\n\t     * The id for the region this state is bound to.\n\t     * @type {String}\n\t     */\n\t    this.regionId = regionId;\n\t\n\t    /**\n\t     * An array of current and recently inactive\n\t     *  Input objects related to a gesture.\n\t     * @type {Input}\n\t     */\n\t    this.inputs = [];\n\t\n\t    /**\n\t     * An array of Binding objects; The list of relations between elements,\n\t     *   their gestures, and the handlers.\n\t     * @type {Binding}\n\t     */\n\t    this.bindings = [];\n\t\n\t    /**\n\t     * The number of gestures that have been registered with this state\n\t     * @type {Number}\n\t     */\n\t    this.numGestures = 0;\n\t\n\t    /**\n\t     * A key/value map all the registered gestures for the listener.\n\t     *  Note: Can only have one gesture registered to one key.\n\t     * @type {Object}\n\t     */\n\t    this.registeredGestures = {};\n\t\n\t    this.registerGesture(new _Expand2.default(), 'expand');\n\t    this.registerGesture(new _Pan2.default(), 'pan');\n\t    this.registerGesture(new _Rotate2.default(), 'rotate');\n\t    this.registerGesture(new _Pinch2.default(), 'pinch');\n\t    this.registerGesture(new _Swipe2.default(), 'swipe');\n\t    this.registerGesture(new _Tap2.default(), 'tap');\n\t  }\n\t\n\t  /**\n\t   * Creates a new binding with the given element and gesture object.\n\t   * If the gesture object provided is unregistered, it's reference\n\t   * will be saved in as a binding to be later referenced.\n\t   * @param  {Element} element - The element the gesture is bound to.\n\t   * @param {String|Object} gesture  - Either a name of a registered gesture,\n\t   *  or an unregistered  Gesture object.\n\t   * @param {Function} handler - The function handler to be called\n\t   *  when the event is emitted. Used to bind/unbind.\n\t   * @param {Boolean} capture - Whether the gesture is to be\n\t   *  detected in the capture of bubble phase. Used to bind/unbind.\n\t   * @param {Boolean} bindOnce - Option to bind once and\n\t   *  only emit the event once.\n\t   */\n\t\n\t\n\t  _createClass(State, [{\n\t    key: 'addBinding',\n\t    value: function addBinding(element, gesture, handler, capture, bindOnce) {\n\t      var boundGesture = void 0;\n\t\n\t      // Error type checking.\n\t      if (element && typeof element.tagName === 'undefined') {\n\t        throw new Error('Parameter element is an invalid object.');\n\t      }\n\t\n\t      if (typeof handler !== 'function') {\n\t        throw new Error('Parameter handler is invalid.');\n\t      }\n\t\n\t      if (typeof gesture === 'string' && Object.keys(this.registeredGestures).indexOf(gesture) === -1) {\n\t        throw new Error('Parameter ' + gesture + ' is not a registered gesture');\n\t      } else if ((typeof gesture === 'undefined' ? 'undefined' : _typeof(gesture)) === 'object' && !(gesture instanceof _Gesture2.default)) {\n\t        throw new Error('Parameter for the gesture is not of a Gesture type');\n\t      }\n\t\n\t      if (typeof gesture === 'string') {\n\t        boundGesture = this.registeredGestures[gesture];\n\t      } else {\n\t        boundGesture = gesture;\n\t        if (boundGesture.id === '') {\n\t          this.assignGestureId(boundGesture);\n\t        }\n\t      }\n\t\n\t      this.bindings.push(new _Binding2.default(element, boundGesture, handler, capture, bindOnce));\n\t      element.addEventListener(boundGesture.getId(), handler, capture);\n\t    }\n\t\n\t    /**\n\t     * Retrieves the Binding by which an element is associated to.\n\t     * @param {Element} element - The element to find bindings to.\n\t     * @return {Array} - An array of Bindings to which that element is bound\n\t     */\n\t\n\t  }, {\n\t    key: 'retrieveBindingsByElement',\n\t    value: function retrieveBindingsByElement(element) {\n\t      var matches = [];\n\t      this.bindings.map(function (binding) {\n\t        if (binding.element === element) {\n\t          matches.push(binding);\n\t        }\n\t      });\n\t      return matches;\n\t    }\n\t\n\t    /**\n\t     * Retrieves all bindings based upon the initial X/Y position of the inputs.\n\t     * e.g. if gesture started on the correct target element,\n\t     *  but diverted away into the correct region, this would still be valid.\n\t     * @return {Array} - An array of Bindings to which that element is bound\n\t     */\n\t\n\t  }, {\n\t    key: 'retrieveBindingsByInitialPos',\n\t    value: function retrieveBindingsByInitialPos() {\n\t      var _this = this;\n\t\n\t      var matches = [];\n\t      this.bindings.forEach(function (binding) {\n\t        // Determine if at least one input is in the target element.\n\t        // They should all be in the region based upon a prior check\n\t        var inputsInside = _this.inputs.filter(function (input) {\n\t          return _util2.default.isInside(input.initial.x, input.initial.y, binding.element);\n\t        });\n\t        if (inputsInside.length > 0) {\n\t          matches.push(binding);\n\t        }\n\t      });\n\t      return matches;\n\t    }\n\t\n\t    /**\n\t     * Updates the inputs with new information based upon a new event being fired.\n\t     * @param {Event} event - The event being captured.\n\t     * @param {Element} regionElement - The element where\n\t     *  this current Region is bound to.\n\t     * @return {boolean} - returns true for a successful update,\n\t     *  false if the event is invalid.\n\t     */\n\t\n\t  }, {\n\t    key: 'updateInputs',\n\t    value: function updateInputs(event, regionElement) {\n\t      var identifier = DEFAULT_MOUSE_ID;\n\t      var eventType = event.touches ? 'TouchEvent' : event.pointerType ? 'PointerEvent' : 'MouseEvent';\n\t      switch (eventType) {\n\t        case 'TouchEvent':\n\t\n\t          for (var index in event.changedTouches) {\n\t            if (event.changedTouches.hasOwnProperty(index) && _util2.default.isInteger(parseInt(index))) {\n\t              identifier = event.changedTouches[index].identifier;\n\t              update(event, this, identifier, regionElement);\n\t            }\n\t          }\n\t          break;\n\t\n\t        case 'PointerEvent':\n\t          identifier = event.pointerId;\n\t          update(event, this, identifier, regionElement);\n\t          break;\n\t\n\t        case 'MouseEvent':\n\t        default:\n\t          update(event, this, DEFAULT_MOUSE_ID, regionElement);\n\t          break;\n\t      }\n\t      return true;\n\t\n\t      function update(event, state, identifier, regionElement) {\n\t        var eventType = _util2.default.normalizeEvent(event.type);\n\t        var input = findInputById(state.inputs, identifier);\n\t\n\t        // A starting input was not cleaned up properly and still exists.\n\t        if (eventType === 'start' && input) {\n\t          state.resetInputs();\n\t          return;\n\t        }\n\t\n\t        // An input has moved outside the region.\n\t        if (eventType !== 'start' && input && !_util2.default.isInside(input.current.x, input.current.y, regionElement)) {\n\t          state.resetInputs();\n\t          return;\n\t        }\n\t\n\t        if (eventType !== 'start' && !input) {\n\t          state.resetInputs();\n\t          return;\n\t        }\n\t\n\t        if (eventType === 'start') {\n\t          state.inputs.push(new _Input2.default(event, identifier));\n\t        } else {\n\t          input.update(event, identifier);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all inputs from the state, allowing for a new gesture.\n\t     */\n\t\n\t  }, {\n\t    key: 'resetInputs',\n\t    value: function resetInputs() {\n\t      this.inputs = [];\n\t    }\n\t\n\t    /**\n\t     * Counts the number of active inputs at any given time.\n\t     * @return {Number} - The number of active inputs.\n\t     */\n\t\n\t  }, {\n\t    key: 'numActiveInputs',\n\t    value: function numActiveInputs() {\n\t      var endType = this.inputs.filter(function (input) {\n\t        return input.current.type !== 'end';\n\t      });\n\t      return endType.length;\n\t    }\n\t\n\t    /**\n\t     * Register the gesture to the current region.\n\t     * @param {Object} gesture - The gesture to register\n\t     * @param {String} key - The key to define the new gesture as.\n\t     */\n\t\n\t  }, {\n\t    key: 'registerGesture',\n\t    value: function registerGesture(gesture, key) {\n\t      this.assignGestureId(gesture);\n\t      this.registeredGestures[key] = gesture;\n\t    }\n\t\n\t    /**\n\t     * Tracks the gesture to this state object to become uniquely identifiable.\n\t     * Useful for nested Regions.\n\t     * @param {Gesture} gesture - The gesture to track\n\t     */\n\t\n\t  }, {\n\t    key: 'assignGestureId',\n\t    value: function assignGestureId(gesture) {\n\t      gesture.setId(this.regionId + '-' + this.numGestures++);\n\t    }\n\t  }]);\n\t\n\t  return State;\n\t}();\n\t/**\n\t * Searches through each input, comparing the browser's identifier key\n\t *  for touches, to the stored one in each input\n\t * @param {Array} inputs - The array of inputs in state.\n\t * @param {String} identifier - The identifier the browser has assigned.\n\t * @return {Input} - The input object with the corresponding identifier,\n\t *  null if it did not find any.\n\t */\n\t\n\t\n\tfunction findInputById(inputs, identifier) {\n\t  for (var i = 0; i < inputs.length; i++) {\n\t    if (inputs[i].identifier === identifier) {\n\t      return inputs[i];\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\texports.default = State;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Distance2 = __webpack_require__(11);\n\t\n\tvar _Distance3 = _interopRequireDefault(_Distance2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Expand.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Expand class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * An Expand is defined as two inputs moving farther away from each other.\n\t * This gesture does not account for any start/end events to allow for the\n\t * event to interact with the Pan and Pinch events.\n\t * @class Expand\n\t */\n\tvar Expand = function (_Distance) {\n\t  _inherits(Expand, _Distance);\n\t\n\t  /**\n\t   * Constructor function for the Expand class.\n\t   * @param {object} options\n\t   */\n\t  function Expand(options) {\n\t    _classCallCheck(this, Expand);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Expand.__proto__ || Object.getPrototypeOf(Expand)).call(this, options));\n\t\n\t    _this.type = 'expand';\n\t    return _this;\n\t  }\n\t\n\t  return Expand;\n\t}(_Distance3.default);\n\t\n\texports.default = Expand;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Gesture2 = __webpack_require__(4);\n\t\n\tvar _Gesture3 = _interopRequireDefault(_Gesture2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Distance.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the abstract Distance class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar DEFAULT_INPUTS = 2;\n\tvar DEFAULT_MIN_THRESHOLD = 1;\n\t\n\t/**\n\t * A Distance is defined as two inputs moving either together or apart.\n\t * @class Distance\n\t */\n\t\n\tvar Distance = function (_Gesture) {\n\t  _inherits(Distance, _Gesture);\n\t\n\t  /**\n\t   * Constructor function for the Distance class.\n\t   * @param {Object} options\n\t   */\n\t  function Distance(options) {\n\t    _classCallCheck(this, Distance);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Distance.__proto__ || Object.getPrototypeOf(Distance)).call(this));\n\t\n\t    _this.type = 'distance';\n\t\n\t    /**\n\t     * The minimum amount in pixels the inputs must move until it is fired.\n\t     * @type {Number}\n\t     */\n\t    _this.threshold = options && options.threshold ? options.threshold : DEFAULT_MIN_THRESHOLD;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Event hook for the start of a gesture. Initialized the lastEmitted\n\t   * gesture and stores it in the first input for reference events.\n\t   * @param {Array} inputs\n\t   */\n\t\n\t\n\t  _createClass(Distance, [{\n\t    key: 'start',\n\t    value: function start(inputs, state, element) {\n\t      if (!this.isValid(inputs, state, element)) {\n\t        return null;\n\t      }\n\t      if (inputs.length === DEFAULT_INPUTS) {\n\t        // Store the progress in the first input.\n\t        var progress = inputs[0].getGestureProgress(this.type);\n\t        progress.lastEmittedDistance = _util2.default.distanceBetweenTwoPoints(inputs[0].current.x, inputs[1].current.x, inputs[0].current.y, inputs[1].current.y);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Event hook for the move of a gesture.\n\t     *  Determines if the two points are moved in the expected direction relative\n\t     *  to the current distance and the last distance.\n\t     * @param {Array} inputs - The array of Inputs on the screen.\n\t     * @param {Object} state - The state object of the current region.\n\t     * @param {Element} element - The element associated to the binding.\n\t     * @return {Object | null} - Returns the distance in pixels between two inputs\n\t     */\n\t\n\t  }, {\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      if (state.numActiveInputs() === DEFAULT_INPUTS) {\n\t        var currentDistance = _util2.default.distanceBetweenTwoPoints(inputs[0].current.x, inputs[1].current.x, inputs[0].current.y, inputs[1].current.y);\n\t        var lastDistance = _util2.default.distanceBetweenTwoPoints(inputs[0].previous.x, inputs[1].previous.x, inputs[0].previous.y, inputs[1].previous.y);\n\t\n\t        var centerPoint = _util2.default.getMidpoint(inputs[0].current.x, inputs[1].current.x, inputs[0].current.y, inputs[1].current.y);\n\t\n\t        // Retrieve the first input's progress.\n\t        var progress = inputs[0].getGestureProgress(this.type);\n\t\n\t        if (this.constructor.name === 'Expand') {\n\t          if (currentDistance < lastDistance) {\n\t            progress.lastEmittedDistance = currentDistance;\n\t          } else if (currentDistance - progress.lastEmittedDistance >= this.threshold) {\n\t            progress.lastEmittedDistance = currentDistance;\n\t            return {\n\t              distance: currentDistance,\n\t              center: centerPoint\n\t            };\n\t          }\n\t        } else {\n\t          if (currentDistance > lastDistance) {\n\t            progress.lastEmittedDistance = currentDistance;\n\t          } else if (currentDistance < lastDistance && progress.lastEmittedDistance - currentDistance >= this.threshold) {\n\t            progress.lastEmittedDistance = currentDistance;\n\t            return {\n\t              distance: currentDistance,\n\t              center: centerPoint\n\t            };\n\t          }\n\t        }\n\t\n\t        return null;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Distance;\n\t}(_Gesture3.default);\n\t\n\texports.default = Distance;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Gesture2 = __webpack_require__(4);\n\t\n\tvar _Gesture3 = _interopRequireDefault(_Gesture2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Pan.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Pan class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar DEFAULT_INPUTS = 1;\n\tvar DEFAULT_MIN_THRESHOLD = 1;\n\t\n\t/**\n\t * A Pan is defined as a normal movement in any direction on a screen.\n\t * Pan gestures do not track start events and can interact with pinch and \\\n\t *  expand gestures.\n\t * @class Pan\n\t */\n\t\n\tvar Pan = function (_Gesture) {\n\t  _inherits(Pan, _Gesture);\n\t\n\t  /**\n\t   * Constructor function for the Pan class.\n\t   * @param {Object} [options] - The options object.\n\t   * @param {Number} [options.numInputs=1] - Number of inputs for the\n\t   *  Pan gesture.\n\t   * @param {Number} [options.threshold=1] - The minimum number of\n\t   * pixels the input has to move to trigger this gesture.\n\t   */\n\t  function Pan(options) {\n\t    _classCallCheck(this, Pan);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Pan.__proto__ || Object.getPrototypeOf(Pan)).call(this));\n\t\n\t    _this.type = 'pan';\n\t\n\t    /**\n\t     * The number of inputs to trigger a Pan can be variable,\n\t     * and the maximum number being a factor of the browser.\n\t     * @type {Number}\n\t     */\n\t    _this.numInputs = options && options.numInputs ? options.numInputs : DEFAULT_INPUTS;\n\t\n\t    /**\n\t     * The minimum amount in pixels the pan must move until it is fired.\n\t     * @type {Number}\n\t     */\n\t    _this.threshold = options && options.threshold ? options.threshold : DEFAULT_MIN_THRESHOLD;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Event hook for the start of a gesture. Marks each input as active,\n\t   * so it can invalidate any end events.\n\t   * @param {Array} inputs\n\t   */\n\t\n\t\n\t  _createClass(Pan, [{\n\t    key: 'start',\n\t    value: function start(inputs) {\n\t      var _this2 = this;\n\t\n\t      inputs.forEach(function (input) {\n\t        var progress = input.getGestureProgress(_this2.getId());\n\t        progress.active = true;\n\t        progress.lastEmitted = {\n\t          x: input.current.x,\n\t          y: input.current.y\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * move() - Event hook for the move of a gesture.\n\t     * Fired whenever the input length is met, and keeps a boolean flag that\n\t     * the gesture has fired at least once.\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t     * @param {Object} state - The state object of the current region.\n\t     * @param {Element} element - The element associated to the binding.\n\t     * @return {Object} - Returns the distance in pixels between the two inputs.\n\t     */\n\t\n\t  }, {\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      if (this.numInputs === inputs.length) {\n\t        var output = {\n\t          data: []\n\t        };\n\t        for (var i = 0; i < inputs.length; i++) {\n\t          var progress = inputs[i].getGestureProgress(this.getId());\n\t\n\t          var reachedThreshold = false;\n\t\n\t          // Check threshold distance\n\t          var yThreshold = Math.abs(inputs[i].current.y - progress.lastEmitted.y) > this.threshold;\n\t          var xThreshold = Math.abs(inputs[i].current.x - progress.lastEmitted.x) > this.threshold;\n\t          reachedThreshold = yThreshold || xThreshold;\n\t\n\t          if (progress.active && reachedThreshold) {\n\t            output.data[i] = {\n\t              distanceFromOrigin: _util2.default.distanceBetweenTwoPoints(inputs[i].initial.x, inputs[i].current.x, inputs[i].initial.y, inputs[i].current.y),\n\t              directionFromOrigin: _util2.default.getAngle(inputs[i].initial.x, inputs[i].initial.y, inputs[i].current.x, inputs[i].current.y),\n\t              currentDirection: _util2.default.getAngle(progress.lastEmitted.x, progress.lastEmitted.y, inputs[i].current.x, inputs[i].current.y)\n\t            };\n\t            progress.lastEmitted.x = inputs[i].current.x;\n\t            progress.lastEmitted.y = inputs[i].current.y;\n\t          } else {\n\t            return null;\n\t          }\n\t        }\n\t      }\n\t\n\t      return output;\n\t    }\n\t\n\t    /* move*/\n\t\n\t    /**\n\t     * end() - Event hook for the end of a gesture. If the gesture has at least\n\t     * fired once, then it ends on the first end event such that any remaining\n\t     * inputs will not trigger the event until all inputs have reached the\n\t     * touchend event. Any touchend->touchstart events that occur before all\n\t     * inputs are fully off the screen should not fire.\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t     * @return {null} - null if the gesture is not to be emitted,\n\t     *  Object with information otherwise.\n\t     */\n\t\n\t  }, {\n\t    key: 'end',\n\t    value: function end(inputs) {\n\t      var _this3 = this;\n\t\n\t      inputs.forEach(function (input) {\n\t        var progress = input.getGestureProgress(_this3.getId());\n\t        progress.active = false;\n\t      });\n\t      return null;\n\t    }\n\t\n\t    /* end*/\n\t\n\t  }]);\n\t\n\t  return Pan;\n\t}(_Gesture3.default);\n\t\n\texports.default = Pan;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Distance2 = __webpack_require__(11);\n\t\n\tvar _Distance3 = _interopRequireDefault(_Distance2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Pinch.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Pinch class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * An Pinch is defined as two inputs moving closer to each other.\n\t * This gesture does not account for any start/end events to allow for the event\n\t * to interact with the Pan and Pinch events.\n\t * @class Pinch\n\t */\n\tvar Pinch = function (_Distance) {\n\t  _inherits(Pinch, _Distance);\n\t\n\t  /**\n\t   * Constructor function for the Pinch class.\n\t   * @param {Object} options\n\t   */\n\t  function Pinch(options) {\n\t    _classCallCheck(this, Pinch);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Pinch.__proto__ || Object.getPrototypeOf(Pinch)).call(this, options));\n\t\n\t    _this.type = 'pinch';\n\t    return _this;\n\t  }\n\t\n\t  return Pinch;\n\t}(_Distance3.default);\n\t\n\texports.default = Pinch;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Gesture2 = __webpack_require__(4);\n\t\n\tvar _Gesture3 = _interopRequireDefault(_Gesture2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Rotate.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Rotate class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar MAX_INPUTS = 2;\n\t\n\t/**\n\t * A Rotate is defined as two inputs moving about a circle,\n\t * maintaining a relatively equal radius.\n\t * @class Rotate\n\t */\n\t\n\tvar Rotate = function (_Gesture) {\n\t  _inherits(Rotate, _Gesture);\n\t\n\t  /**\n\t   * Constructor function for the Rotate class.\n\t   */\n\t  function Rotate() {\n\t    _classCallCheck(this, Rotate);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Rotate.__proto__ || Object.getPrototypeOf(Rotate)).call(this));\n\t\n\t    _this.type = 'rotate';\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * move() - Event hook for the move of a gesture. Obtains the midpoint of two\n\t   * the two inputs and calculates the projection of the right most input along\n\t   * a unit circle to obtain an angle. This angle is compared to the previously\n\t   * calculated angle to output the change of distance, and is compared to the\n\t   * initial angle to output the distance from the initial angle to the current\n\t   * angle.\n\t   * @param {Array} inputs - The array of Inputs on the screen\n\t   * @param {Object} state - The state object of the current listener.\n\t   * @param {Element} element - The element associated to the binding.\n\t   * @return {null} - null if this event did not occur\n\t   * @return {Object} obj.angle - The current angle along the unit circle\n\t   * @return {Object} obj.distanceFromOrigin - The angular distance travelled\n\t   * from the initial right most point.\n\t   * @return {Object} obj.distanceFromLast - The change of angle between the\n\t   * last position and the current position.\n\t   */\n\t\n\t\n\t  _createClass(Rotate, [{\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      if (state.numActiveInputs() <= MAX_INPUTS) {\n\t        var referencePivot = void 0;\n\t        var diffX = void 0;\n\t        var diffY = void 0;\n\t        var input = void 0;\n\t        if (state.numActiveInputs() === 1) {\n\t          var bRect = element.getBoundingClientRect();\n\t          referencePivot = {\n\t            x: bRect.left + bRect.width / 2,\n\t            y: bRect.top + bRect.height / 2\n\t          };\n\t          input = inputs[0];\n\t          diffX = diffY = 0;\n\t        } else {\n\t          referencePivot = _util2.default.getMidpoint(inputs[0].initial.x, inputs[1].initial.x, inputs[0].initial.y, inputs[1].initial.y);\n\t          var currentPivot = _util2.default.getMidpoint(inputs[0].current.x, inputs[1].current.x, inputs[0].current.y, inputs[1].current.y);\n\t          diffX = referencePivot.x - currentPivot.x;\n\t          diffY = referencePivot.y - currentPivot.y;\n\t          input = _util2.default.getRightMostInput(inputs);\n\t        }\n\t\n\t        // Translate the current pivot point.\n\t        var currentAngle = _util2.default.getAngle(referencePivot.x, referencePivot.y, input.current.x + diffX, input.current.y + diffY);\n\t\n\t        var progress = input.getGestureProgress(this.getId());\n\t        if (!progress.initialAngle) {\n\t          progress.initialAngle = progress.previousAngle = currentAngle;\n\t          progress.distance = progress.change = 0;\n\t        } else {\n\t          progress.change = _util2.default.getAngularDistance(progress.previousAngle, currentAngle);\n\t          progress.distance = progress.distance + progress.change;\n\t        }\n\t\n\t        progress.previousAngle = currentAngle;\n\t\n\t        return {\n\t          angle: currentAngle,\n\t          distanceFromOrigin: progress.distance,\n\t          distanceFromLast: progress.change\n\t        };\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /* move*/\n\t\n\t  }]);\n\t\n\t  return Rotate;\n\t}(_Gesture3.default);\n\t\n\texports.default = Rotate;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Gesture2 = __webpack_require__(4);\n\t\n\tvar _Gesture3 = _interopRequireDefault(_Gesture2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Swipe.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Swipe class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar DEFAULT_INPUTS = 1;\n\tvar DEFAULT_MAX_REST_TIME = 100;\n\tvar DEFAULT_ESCAPE_VELOCITY = 0.2;\n\tvar DEFAULT_TIME_DISTORTION = 100;\n\tvar DEFAULT_MAX_PROGRESS_STACK = 10;\n\t\n\t/**\n\t * A swipe is defined as input(s) moving in the same direction in an relatively\n\t * increasing velocity and leaving the screen at some point before it drops\n\t * below it's escape velocity.\n\t * @class Swipe\n\t */\n\t\n\tvar Swipe = function (_Gesture) {\n\t  _inherits(Swipe, _Gesture);\n\t\n\t  /**\n\t   * Constructor function for the Swipe class.\n\t   * @param {Object} [options] - The options object.\n\t   * @param {Number} [options.numInputs] - The number of inputs to trigger a\n\t   * Swipe can be variable, and the maximum number being a factor of the browser\n\t   *  move and current move events.\n\t   * @param {Number} [options.maxRestTime] - The maximum resting time a point\n\t   *  has between it's last\n\t   * @param {Number} [options.escapeVelocity] - The minimum velocity the input\n\t   *  has to be at to emit a swipe.\n\t   * @param {Number} [options.timeDistortion] - (EXPERIMENTAL) A value of time\n\t   *  in milliseconds to distort between events.\n\t   * @param {Number} [options.maxProgressStack] - (EXPERIMENTAL)The maximum\n\t   *  amount of move events to keep\n\t   * track of for a swipe.\n\t   */\n\t  function Swipe(options) {\n\t    _classCallCheck(this, Swipe);\n\t\n\t    /**\n\t     * The type of the Gesture\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Swipe.__proto__ || Object.getPrototypeOf(Swipe)).call(this));\n\t\n\t    _this.type = 'swipe';\n\t\n\t    /**\n\t     * The number of inputs to trigger a Swipe can be variable,\n\t     * and the maximum number being a factor of the browser.\n\t     * @type {Number}\n\t     */\n\t    _this.numInputs = options && options.numInputs ? options.numInputs : DEFAULT_INPUTS;\n\t\n\t    /**\n\t     * The maximum resting time a point has between it's last move and\n\t     * current move events.\n\t     * @type {Number}\n\t     */\n\t    _this.maxRestTime = options && options.maxRestTime ? options.maxRestTime : DEFAULT_MAX_REST_TIME;\n\t\n\t    /**\n\t     * The minimum velocity the input has to be at to emit a swipe.\n\t     * This is useful for determining the difference between\n\t     * a swipe and a pan gesture.\n\t     * @type {number}\n\t     */\n\t    _this.escapeVelocity = options && options.escapeVelocity ? options.escapeVelocity : DEFAULT_ESCAPE_VELOCITY;\n\t\n\t    /**\n\t     * (EXPERIMENTAL) A value of time in milliseconds to distort between events.\n\t     * Browsers do not accurately measure time with the Date constructor in\n\t     * milliseconds, so consecutive events sometimes display the same timestamp\n\t     * but different x/y coordinates. This will distort a previous time\n\t     * in such cases by the timeDistortion's value.\n\t     * @type {number}\n\t     */\n\t    _this.timeDistortion = options && options.timeDistortion ? options.timeDistortion : DEFAULT_TIME_DISTORTION;\n\t\n\t    /**\n\t     * (EXPERIMENTAL) The maximum amount of move events to keep track of for a\n\t     * swipe. This helps give a more accurate estimate of the user's velocity.\n\t     * @type {number}\n\t     */\n\t    _this.maxProgressStack = options && options.maxProgressStack ? options.maxProgressStack : DEFAULT_MAX_PROGRESS_STACK;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Event hook for the move of a gesture. Captures an input's x/y coordinates\n\t   * and the time of it's event on a stack.\n\t   * @param {Array} inputs - The array of Inputs on the screen.\n\t   * @param {Object} state - The state object of the current region.\n\t   * @param {Element} element - The element associated to the binding.\n\t   * @return {null} - Swipe does not emit from a move.\n\t   */\n\t\n\t\n\t  _createClass(Swipe, [{\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      if (this.numInputs === inputs.length) {\n\t        for (var i = 0; i < inputs.length; i++) {\n\t          var progress = inputs[i].getGestureProgress(this.getId());\n\t          if (!progress.moves) {\n\t            progress.moves = [];\n\t          }\n\t\n\t          progress.moves.push({\n\t            time: new Date().getTime(),\n\t            x: inputs[i].current.x,\n\t            y: inputs[i].current.y\n\t          });\n\t\n\t          if (progress.length > this.maxProgressStack) {\n\t            progress.moves.shift();\n\t          }\n\t        }\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /* move*/\n\t\n\t    /**\n\t     * Determines if the input's history validates a swipe motion.\n\t     * Determines if it did not come to a complete stop (maxRestTime), and if it\n\t     * had enough of a velocity to be considered (ESCAPE_VELOCITY).\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t     * @return {null|Object} - null if the gesture is not to be emitted,\n\t     *  Object with information otherwise.\n\t     */\n\t\n\t  }, {\n\t    key: 'end',\n\t    value: function end(inputs) {\n\t      if (this.numInputs === inputs.length) {\n\t        var output = {\n\t          data: []\n\t        };\n\t\n\t        for (var i = 0; i < inputs.length; i++) {\n\t          // Determine if all input events are on the 'end' event.\n\t          if (inputs[i].current.type !== 'end') {\n\t            return;\n\t          }\n\t\n\t          var progress = inputs[i].getGestureProgress(this.getId());\n\t          if (progress.moves && progress.moves.length > 2) {\n\t            // CHECK : Return if the input has not moved in maxRestTime ms.\n\t\n\t            var currentMove = progress.moves.pop();\n\t            if (new Date().getTime() - currentMove.time > this.maxRestTime) {\n\t              return null;\n\t            }\n\t\n\t            var lastMove = void 0;\n\t            var index = progress.moves.length - 1;\n\t\n\t            /* Date is unreliable, so we retrieve the last move event where\n\t             the time is not the same. */\n\t            while (index !== -1) {\n\t              if (progress.moves[index].time !== currentMove.time) {\n\t                lastMove = progress.moves[index];\n\t                break;\n\t              }\n\t\n\t              index--;\n\t            }\n\t\n\t            /* If the date is REALLY unreliable, we apply a time distortion\n\t             to the last event.\n\t             */\n\t            if (!lastMove) {\n\t              lastMove = progress.moves.pop();\n\t              lastMove.time += this.timeDistortion;\n\t            }\n\t\n\t            var velocity = _util2.default.getVelocity(lastMove.x, lastMove.y, lastMove.time, currentMove.x, currentMove.y, currentMove.time);\n\t\n\t            output.data[i] = {\n\t              velocity: velocity,\n\t              distance: _util2.default.distanceBetweenTwoPoints(lastMove.x, currentMove.x, lastMove.y, currentMove.y),\n\t              duration: currentMove.time - lastMove.time,\n\t              currentDirection: _util2.default.getAngle(lastMove.x, lastMove.y, currentMove.x, currentMove.y)\n\t            };\n\t          }\n\t        }\n\t\n\t        for (var i = 0; i < output.data.length; i++) {\n\t          if (velocity < this.escapeVelocity) {\n\t            return null;\n\t          }\n\t        }\n\t\n\t        if (output.data.length > 0) {\n\t          return output;\n\t        }\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /* end*/\n\t\n\t  }]);\n\t\n\t  return Swipe;\n\t}(_Gesture3.default);\n\t\n\texports.default = Swipe;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Gesture2 = __webpack_require__(4);\n\t\n\tvar _Gesture3 = _interopRequireDefault(_Gesture2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Tap.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Tap class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar DEFAULT_MIN_DELAY_MS = 0;\n\tvar DEFAULT_MAX_DELAY_MS = 300;\n\tvar DEFAULT_INPUTS = 1;\n\tvar DEFAULT_MOVE_PX_TOLERANCE = 10;\n\t\n\t/**\n\t * A Tap is defined as a touchstart to touchend event in quick succession.\n\t * @class Tap\n\t */\n\t\n\tvar Tap = function (_Gesture) {\n\t  _inherits(Tap, _Gesture);\n\t\n\t  /**\n\t   * Constructor function for the Tap class.\n\t   * @param {Object} [options] - The options object.\n\t   * @param {Number} [options.minDelay=0] - The minimum delay between a\n\t   * touchstart and touchend can be configured in milliseconds.\n\t   * @param {Number} [options.maxDelay=300] - The maximum delay between a\n\t   * touchstart and touchend can be configured in milliseconds.\n\t   * @param {Number} [options.numInputs=1] - Number of inputs for Tap gesture.\n\t   * @param {Number} [options.tolerance=10] - The tolerance in pixels\n\t   *  a user can move.\n\t   */\n\t  function Tap(options) {\n\t    _classCallCheck(this, Tap);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Tap.__proto__ || Object.getPrototypeOf(Tap)).call(this));\n\t\n\t    _this.type = 'tap';\n\t\n\t    /**\n\t     * The minimum amount between a touchstart and a touchend can be configured\n\t     * in milliseconds. The minimum delay starts to count down when the expected\n\t     * number of inputs are on the screen, and ends when ALL inputs are off the\n\t     * screen.\n\t     * @type {Number}\n\t     */\n\t    _this.minDelay = options && options.minDelay ? options.minDelay : DEFAULT_MIN_DELAY_MS;\n\t\n\t    /**\n\t     * The maximum delay between a touchstart and touchend can be configured in\n\t     * milliseconds. The maximum delay starts to count down when the expected\n\t     * number of inputs are on the screen, and ends when ALL inputs are off the\n\t     * screen.\n\t     * @type {Number}\n\t     */\n\t    _this.maxDelay = options && options.maxDelay ? options.maxDelay : DEFAULT_MAX_DELAY_MS;\n\t\n\t    /**\n\t     * The number of inputs to trigger a Tap can be variable,\n\t     * and the maximum number being a factor of the browser.\n\t     * @type {Number}\n\t     */\n\t    _this.numInputs = options && options.numInputs ? options.numInputs : DEFAULT_INPUTS;\n\t\n\t    /**\n\t     * A move tolerance in pixels allows some slop between a user's start to end\n\t     * events. This allows the Tap gesture to be triggered more easily.\n\t     * @type {number}\n\t     */\n\t    _this.tolerance = options && options.tolerance ? options.tolerance : DEFAULT_MOVE_PX_TOLERANCE;\n\t    return _this;\n\t  }\n\t\n\t  /* constructor*/\n\t\n\t  /**\n\t   * Event hook for the start of a gesture. Keeps track of when the inputs\n\t   * trigger the start event.\n\t   * @param {Array} inputs - The array of Inputs on the screen.\n\t   * @return {null} - Tap does not trigger on a start event.\n\t   */\n\t\n\t\n\t  _createClass(Tap, [{\n\t    key: 'start',\n\t    value: function start(inputs) {\n\t      var _this2 = this;\n\t\n\t      if (inputs.length === this.numInputs) {\n\t        inputs.forEach(function (input) {\n\t          var progress = input.getGestureProgress(_this2.type);\n\t          progress.start = new Date().getTime();\n\t        });\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /* start*/\n\t\n\t    /**\n\t     * Event hook for the move of a gesture. The Tap event reaches here if the\n\t     * user starts to move their input before an 'end' event is reached.\n\t     * @param {Array} inputs - The array of Inputs on the screen.\n\t     * @param {Object} state - The state object of the current region.\n\t     * @param {Element} element - The element associated to the binding.\n\t     * @return {null} - Tap does not trigger on a move event.\n\t     */\n\t\n\t  }, {\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      var _this3 = this;\n\t\n\t      for (var i = 0; i < inputs.length; i++) {\n\t        if (inputs[i].getCurrentEventType() === 'move') {\n\t          var current = inputs[i].current;\n\t          var previous = inputs[i].previous;\n\t          if (!_util2.default.isWithin(current.x, current.y, previous.x, previous.y, this.tolerance)) {\n\t            var _ret = function () {\n\t              var type = _this3.type;\n\t              inputs.forEach(function (input) {\n\t                input.resetProgress(type);\n\t              });\n\t\n\t              return {\n\t                v: null\n\t              };\n\t            }();\n\t\n\t            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t          }\n\t        }\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /* move*/\n\t\n\t    /**\n\t     * Event hook for the end of a gesture.\n\t     * Determines if this the tap event can be fired if the delay and tolerance\n\t     * constraints are met. Also waits for all of the inputs to be off the screen\n\t     * before determining if the gesture is triggered.\n\t     * @param {Array} inputs - The array of Inputs on the screen.\n\t     * @return {null|Object} - null if the gesture is not to be emitted,\n\t     * Object with information otherwise. Returns the interval time between start\n\t     * and end events.\n\t     */\n\t\n\t  }, {\n\t    key: 'end',\n\t    value: function end(inputs) {\n\t      var _this4 = this;\n\t\n\t      if (inputs.length !== this.numInputs) {\n\t        return null;\n\t      }\n\t\n\t      var startTime = Number.MAX_VALUE;\n\t      for (var i = 0; i < inputs.length; i++) {\n\t        if (inputs[i].getCurrentEventType() !== 'end') {\n\t          return null;\n\t        }\n\t\n\t        var progress = inputs[i].getGestureProgress(this.type);\n\t        if (!progress.start) {\n\t          return null;\n\t        }\n\t\n\t        // Find the most recent input's startTime\n\t        if (progress.start < startTime) {\n\t          startTime = progress.start;\n\t        }\n\t      }\n\t\n\t      var interval = new Date().getTime() - startTime;\n\t      if (this.minDelay <= interval && this.maxDelay >= interval) {\n\t        return {\n\t          interval: interval\n\t        };\n\t      } else {\n\t        var _ret2 = function () {\n\t          var type = _this4.type;\n\t          inputs.forEach(function (input) {\n\t            input.resetProgress(type);\n\t          });\n\t\n\t          return {\n\t            v: null\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n\t      }\n\t    }\n\t\n\t    /* end*/\n\t\n\t  }]);\n\t\n\t  return Tap;\n\t}(_Gesture3.default);\n\t\n\texports.default = Tap;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @file Binding.js\n\t */\n\t\n\t/**\n\t * Responsible for creating a binding between an element and a gesture.\n\t * @class Binding\n\t */\n\tvar Binding =\n\t/**\n\t * Constructor function for the Binding class.\n\t * @param {Element} element - The element to associate the gesture to.\n\t * @param {Gesture} gesture - A instance of the Gesture type.\n\t * @param {Function} handler - The function handler to execute when a\n\t * gesture is recognized\n\t * on the associated element.\n\t * @param {Boolean} [capture=false] - A boolean signifying if the event is\n\t * to be emitted during\n\t * the capture or bubble phase.\n\t * @param {Boolean} [bindOnce=false] - A boolean flag\n\t * used for the bindOnce syntax.\n\t */\n\tfunction Binding(element, gesture, handler, capture, bindOnce) {\n\t  _classCallCheck(this, Binding);\n\t\n\t  /**\n\t   * The element to associate the gesture to.\n\t   * @type {Element}\n\t   */\n\t  this.element = element;\n\t  /**\n\t   * A instance of the Gesture type.\n\t   * @type {Gesture}\n\t   */\n\t  this.gesture = gesture;\n\t  /**\n\t   * The function handler to execute when a gesture is\n\t   * recognized on the associated element.\n\t   * @type {Function}\n\t   */\n\t  this.handler = handler;\n\t\n\t  /**\n\t   * A boolean signifying if the event is to be\n\t   * emitted during the capture or bubble phase.\n\t   * @type {Boolean}\n\t   */\n\t  this.capture = typeof capture !== 'undefined' ? capture : false;\n\t\n\t  /**\n\t   * A boolean flag used for the bindOnce syntax.\n\t   * @type {Boolean}\n\t   */\n\t  this.bindOnce = typeof bindOnce !== 'undefined' ? bindOnce : false;\n\t};\n\t\n\texports.default = Binding;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tfile Input.js\n\tn\t\n\tvar _ZingEvent = __webpack_require__(19);\n\t\n\tvar _ZingEvent2 = _interopRequireDefault(_ZingEvent);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Tracks a single input and contains information about the\n\t * current, previous, and initial events.\n\t * Contains the progress of each Input and it's associated gestures.\n\t * @class Input\n\t */\n\tvar Input = function () {\n\t\n\t  /**\n\t   * Constructor function for the Input class.\n\t   * @param {Event} event - The Event object from the window\n\t   * @param {Number} [identifier=0] - The identifier for each input event\n\t   * (taken from event.changedTouches)\n\t   */\n\t  function Input(event, identifier) {\n\t    _classCallCheck(this, Input);\n\t\n\t    var currentEvent = new _ZingEvent2.default(event, identifier);\n\t\n\t    /**\n\t     * Holds the initial event object. A touchstart/mousedown event.\n\t     * @type {ZingEvent}\n\t     */\n\t    this.initial = currentEvent;\n\t\n\t    /**\n\t     * Holds the most current event for this Input, disregarding any other past,\n\t     * current, and future events that other Inputs participate in.\n\t     * e.g. This event ended in an 'end' event, but another Input is still\n\t     * participating in events -- this will not be updated in such cases.\n\t     * @type {ZingEvent}\n\t     */\n\t    this.current = currentEvent;\n\t\n\t    /**\n\t     * Holds the previous event that took place.\n\t     * @type {ZingEvent}\n\t     */\n\t    this.previous = currentEvent;\n\t\n\t    /**\n\t     * Refers to the event.touches index, or 0 if a simple mouse event occurred.\n\t     * @type {Number}\n\t     */\n\t    this.identifier = typeof identifier !== 'undefined' ? identifier : 0;\n\t\n\t    /**\n\t     * Stores internal state between events for\n\t     * each gesture based off of the gesture's id.\n\t     * @type {Object}\n\t     */\n\t    this.progress = {};\n\t  }\n\t\n\t  /**\n\t   * Receives an input, updates the internal state of what the input has done.\n\t   * @param {Event} event - The event object to wrap with a ZingEvent.\n\t   * @param {Number} touchIdentifier - The index of inputs, from event.touches\n\t   */\n\t\n\t\n\t  _createClass(Input, [{\n\t    key: 'update',\n\t    value: function update(event, touchIdentifier) {\n\t      this.previous = this.current;\n\t      this.current = new _ZingEvent2.default(event, touchIdentifier);\n\t    }\n\t\n\t    /**\n\t     * Returns the progress of the specified gesture.\n\t     * @param {String} id - The identifier for each unique Gesture's progress.\n\t     * @return {Object} - The progress of the gesture.\n\t     * Creates an empty object if no progress has begun.\n\t     */\n\t\n\t  }, {\n\t    key: 'getGestureProgress',\n\t    value: function getGestureProgress(id) {\n\t      if (!this.progress[id]) {\n\t        this.progress[id] = {};\n\t      }\n\t      return this.progress[id];\n\t    }\n\t\n\t    /**\n\t     * Returns the normalized current Event's type.\n\t     * @return {String} The current event's type ( start | move | end )\n\t     */\n\t\n\t  }, {\n\t    key: 'getCurrentEventType',\n\t    value: function getCurrentEventType() {\n\t      return this.current.type;\n\t    }\n\t\n\t    /**\n\t     * Resets a progress/state object of the specified gesture.\n\t     * @param {String} id - The identifier of the specified gesture\n\t     */\n\t\n\t  }, {\n\t    key: 'resetProgress',\n\t    value: function resetProgress(id) {\n\t      this.progress[id] = {};\n\t    }\n\t  }]);\n\t\n\t  return Input;\n\t}();\n\t\n\texports.default = Input;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n\t                                                                                                                                                           * @file ZingEvent.js\n\t                                                                                                                                                           * Contains logic for ZingEvents\n\t                                                                                                                                                           */\n\t\n\tvar INITIAL_COORDINATE = 0;\n\t/**\n\t * An event wrapper that normalizes events across browsers and input devices\n\t * @class ZingEvent\n\t */\n\t\n\tvar ZingEvent =\n\t/**\n\t * @constructor\n\t * @param {Event} event - The event object being wrapped.\n\t * @param {Array} event.touches - The number of touches on\n\t *  a screen (mobile only).\n\t * @param {Object} event.changedTouches - The TouchList representing\n\t * points that participated in the event.\n\t * @param {Number} touchIdentifier - The index of touch if applicable\n\t */\n\tfunction ZingEvent(event, touchIdentifier) {\n\t  _classCallCheck(this, ZingEvent);\n\t\n\t  /**\n\t   * The original event object.\n\t   * @type {Event}\n\t   */\n\t  this.originalEvent = event;\n\t\n\t  /**\n\t   * The type of event or null if it is an event not predetermined.\n\t   * @see util.normalizeEvent\n\t   * @type {String | null}\n\t   */\n\t  this.type = _util2.default.normalizeEvent(event.type);\n\t\n\t  /**\n\t   * The X coordinate for the event, based off of the client.\n\t   * @type {number}\n\t   */\n\t  this.x = INITIAL_COORDINATE;\n\t\n\t  /**\n\t   * The Y coordinate for the event, based off of the client.\n\t   * @type {number}\n\t   */\n\t  this.y = INITIAL_COORDINATE;\n\t\n\t  var eventObj = void 0;\n\t  if (event.touches && event.changedTouches) {\n\t    for (var i = 0; i < event.changedTouches.length; i++) {\n\t      if (event.changedTouches[i].identifier === touchIdentifier) {\n\t        eventObj = event.changedTouches[i];\n\t        break;\n\t      }\n\t    }\n\t  } else {\n\t    eventObj = event;\n\t  }\n\t\n\t  this.x = this.clientX = eventObj.clientX;\n\t  this.y = this.clientY = eventObj.clientY;\n\t\n\t  this.pageX = eventObj.pageX;\n\t  this.pageY = eventObj.pageY;\n\t\n\t  this.screenX = eventObj.screenX;\n\t  this.screenY = eventObj.screenY;\n\t};\n\t\n\texports.default = ZingEvent;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// ./dist/zingtouch.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ba963050fa137fcec55a","/**\n * @file main.js\n * Main file to setup event listeners on the document,\n * and to expose the ZingTouch object\n */\n\nimport ZingTouch from './../ZingTouch.js';\nwindow.ZingTouch = ZingTouch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/main.js","/**\n * @file ZingTouch.js\n * Main object containing API methods and Gesture constructors\n */\n\nimport Region from './core/classes/Region.js';\nimport Gesture from './gestures/Gesture.js';\nimport Expand from './gestures/Expand.js';\nimport Pan from './gestures/Pan.js';\nimport Pinch from './gestures/Pinch.js';\nimport Rotate from './gestures/Rotate.js';\nimport Swipe from './gestures/Swipe.js';\nimport Tap from './gestures/Tap.js';\n\n/**\n * The global API interface for ZingTouch. Contains a constructor for the\n * Region Object, and constructors for each predefined Gesture.\n * @type {Object}\n * @namespace ZingTouch\n */\nlet ZingTouch = {\n  _regions: [],\n\n  // Constructors\n  Gesture: Gesture,\n  Expand: Expand,\n  Pan: Pan,\n  Pinch: Pinch,\n  Rotate: Rotate,\n  Swipe: Swipe,\n  Tap: Tap,\n  Region: function(element, capture, preventDefault) {\n    let id = ZingTouch._regions.length;\n    let region = new Region(element, capture, preventDefault, id);\n    ZingTouch._regions.push(region);\n    return region;\n  },\n};\n\nexport default ZingTouch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ZingTouch.js","/**\n * @file Region.js\n */\n\nimport Binder from './Binder.js';\nimport Gesture from './../../gestures/Gesture.js';\nimport arbiter from './../arbiter.js';\nimport State from './State.js';\n\n/**\n * Allows the user to specify a region to capture all events to feed ZingTouch\n * into. This can be as narrow as the element itself, or as big as the document\n * itself. The more specific an area, the better performant the overall\n * application will perform. Contains API methods to bind/unbind specific\n * elements to corresponding gestures. Also contains the ability to\n * register/unregister new gestures.\n * @class Region\n */\nclass Region {\n\n  /**\n   * Constructor function for the Region class.\n   * @param {Element} element - The element to capture all\n   *  window events in that region to feed into ZingTouch.\n   * @param {boolean} [capture=false] - Whether the region listens for\n   *  captures or bubbles.\n   * @param {boolean} [preventDefault=true] - Whether the default browser\n   *  functionality should be disabled;\n   * @param {Number} id - The id of the region, assigned by the ZingTouch object\n   */\n  constructor(element, capture, preventDefault, id) {\n    /**\n     * The identifier for the Region. This is assigned by the ZingTouch object\n     * and is used to hash gesture id for uniqueness.\n     * @type {Number}\n     */\n    this.id = id;\n\n    /**\n     * The element being bound to.\n     * @type {Element}\n     */\n    this.element = element;\n\n    /**\n     * Whether the region listens for captures or bubbles.\n     * @type {boolean}\n     */\n    this.capture = (typeof capture !== 'undefined') ? capture : false;\n\n    /**\n     * Boolean to disable browser functionality such as scrolling and zooming\n     * over the region\n     * @type {boolean}\n     */\n    this.preventDefault = (typeof preventDefault !== 'undefined') ?\n      preventDefault : true;\n\n    /**\n     * The internal state object for a Region.\n     * Keeps track of registered gestures, inputs, and events.\n     * @type {State}\n     */\n    this.state = new State(id);\n\n    let eventNames = [];\n    if (window.PointerEvent && !window.TouchEvent) {\n      eventNames = [\n        'pointerdown',\n        'pointermove',\n        'pointerup',\n      ];\n    } else {\n      eventNames = [\n        'mousedown',\n        'mousemove',\n        'mouseup',\n        'touchstart',\n        'touchmove',\n        'touchend',\n      ];\n    }\n\n    // Bind detected browser events to the region element.\n    eventNames.map((name) => {\n      element.addEventListener(name, (e) => {\n        arbiter(e, this);\n      }, this.capture);\n    });\n  }\n\n  /**\n   * Bind an element to a registered/unregistered gesture with\n   * multiple function signatures.\n   * @example\n   * bind(element) - chainable\n   * @example\n   * bind(element, gesture, handler, [capture])\n   * @param {Element} element - The element object.\n   * @param {String|Object} [gesture] - Gesture key, or a Gesture object.\n   * @param {Function} [handler] - The function to execute when an event is\n   *  emitted.\n   * @param {Boolean} [capture] - capture/bubble\n   * @param {Boolean} [bindOnce = false] - Option to bind once and\n   *  only emit the event once.\n   * @return {Object} - a chainable object that has the same function as bind.\n   */\n  bind(element, gesture, handler, capture, bindOnce) {\n    if (!element || (element && !element.tagName)) {\n      throw 'Bind must contain an element';\n    }\n\n    bindOnce = (typeof bindOnce !== 'undefined') ? bindOnce : false;\n    if (!gesture) {\n      return new Binder(element, bindOnce, this.state);\n    } else {\n      this.state.addBinding(element, gesture, handler, capture, bindOnce);\n    }\n  }\n\n  /**\n   * Bind an element and sets up actions to remove the binding once\n   * it has been emitted for the first time.\n   * 1. bind(element) - chainable\n   * 2. bind(element, gesture, handler, [capture])\n   * @param {Element} element - The element object.\n   * @param {String|Object} gesture - Gesture key, or a Gesture object.\n   * @param {Function} handler - The function to execute when an\n   *  event is emitted.\n   * @param {Boolean} capture - capture/bubble\n   * @return {Object} - a chainable object that has the same function as bind.\n   */\n  bindOnce(element, gesture, handler, capture) {\n    this.bind(element, gesture, handler, capture, true);\n  }\n\n  /**\n   * Unbinds an element from either the specified gesture\n   *  or all if no element is specified.\n   * @param {Element} element -The element to remove.\n   * @param {String | Object} [gesture] - A String representing the gesture,\n   *   or the actual object being used.\n   * @return {Array} - An array of Bindings that were unbound to the element;\n   */\n  unbind(element, gesture) {\n    let bindings = this.state.retrieveBindingsByElement(element);\n    let unbound = [];\n\n    bindings.forEach((binding) => {\n      if (gesture) {\n        if (typeof gesture === 'string' &&\n          this.state.registeredGestures[gesture]) {\n          let registeredGesture = this.state.registeredGestures[gesture];\n          if (registeredGesture.id === binding.gesture.id) {\n            element.removeEventListener(\n              binding.gesture.getId(),\n              binding.handler, binding.capture);\n            unbound.push(binding);\n          }\n        }\n      } else {\n        element.removeEventListener(\n          binding.gesture.getId(),\n          binding.handler,\n          binding.capture);\n        unbound.push(binding);\n      }\n    });\n\n    return unbound;\n  }\n\n  /* unbind*/\n\n  /**\n   * Registers a new gesture with an assigned key\n   * @param {String} key - The key used to register an element to that gesture\n   * @param {Gesture} gesture - A gesture object\n   */\n  register(key, gesture) {\n    if (typeof key !== 'string') {\n      throw new Error('Parameter key is an invalid string');\n    }\n\n    if (!gesture instanceof Gesture) {\n      throw new Error('Parameter gesture is an invalid Gesture object');\n    }\n\n    gesture.setType(key);\n    this.state.registerGesture(gesture, key);\n  }\n\n  /* register*/\n\n  /**\n   * Un-registers a gesture from the Region's state such that\n   * it is no longer emittable.\n   * Unbinds all events that were registered with the type.\n   * @param {String|Object} key - Gesture key that was used to\n   *  register the object\n   * @return {Object} - The Gesture object that was unregistered\n   *  or null if it could not be found.\n   */\n  unregister(key) {\n    this.state.bindings.forEach((binding) => {\n      if (binding.gesture.getType() === key) {\n        binding.element.removeEventListener(binding.gesture.getId(),\n          binding.handler, binding.capture);\n      }\n    });\n\n    let registeredGesture = this.state.registeredGestures[key];\n    delete this.state.registeredGestures[key];\n    return registeredGesture;\n  }\n}\n\nexport default Region;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/Region.js","/**\n * @file Binder.js\n */\n\n/**\n * A chainable object that contains a single element to be bound upon.\n * Called from ZingTouch.bind(), and is used to chain over gesture callbacks.\n * @class\n */\nclass Binder {\n  /**\n   * Constructor function for the Binder class.\n   * @param {Element} element - The element to bind gestures to.\n   * @param {Boolean} bindOnce - Option to bind once and only emit\n   * the event once.\n   * @param {Object} state - The state of the Region that is being bound to.\n   * @return {Object} - Returns 'this' to be chained over and over again.\n   */\n  constructor(element, bindOnce, state) {\n    /**\n     * The element to bind gestures to.\n     * @type {Element}\n     */\n    this.element = element;\n\n    Object.keys(state.registeredGestures).forEach((key) => {\n      this[key] = (handler, capture) => {\n        state.addBinding(this.element, key, handler, capture, bindOnce);\n        return this;\n      };\n    });\n  }\n\n}\n\nexport default Binder;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/Binder.js","/**\n * @file Gesture.js\n * Contains the Gesture class\n */\n\nimport util from './../core/util.js';\n\n/**\n * The Gesture class that all gestures inherit from.\n */\nclass Gesture {\n  /**\n   * Constructor function for the Gesture class.\n   * @class Gesture\n   */\n  constructor() {\n    /**\n     * The generic string type of gesture ('expand'|'pan'|'pinch'|\n     *  'rotate'|'swipe'|'tap').\n     * @type {String}\n     */\n    this.type = null;\n\n    /**\n     * The unique identifier for each gesture determined at bind time by the\n     * state object. This allows for distinctions across instance variables of\n     * Gestures that are created on the fly (e.g. Tap-1, Tap-2, etc).\n     * @type {String|null}\n     */\n    this.id = null;\n  }\n\n  /**\n   * Set the type of the gesture to be called during an event\n   * @param {String} type - The unique identifier of the gesture being created.\n   */\n  setType(type) {\n    this.type = type;\n  }\n\n  /**\n   * getType() - Returns the generic type of the gesture\n   * @return {String} - The type of gesture\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Set the id of the gesture to be called during an event\n   * @param {String} id - The unique identifier of the gesture being created.\n   */\n  setId(id) {\n    this.id = id;\n  }\n\n  /**\n   * Return the id of the event. If the id does not exist, return the type.\n   * @return {String}\n   */\n  getId() {\n    return (this.id !== null) ? this.id : this.type;\n  }\n\n  /**\n   * Updates internal properties with new ones, only if the properties exist.\n   * @param {Object} object\n   */\n  update(object) {\n    for (let key in object) {\n      if (this[key]) {\n        this[key] = object[key];\n      }\n    }\n  }\n\n  /**\n   * start() - Event hook for the start of a gesture\n   * @param {Array} inputs - The array of Inputs on the screen\n\t * @param {Object} state - The state object of the current region.\n\t * @param {Element} element - The element associated to the binding.\n   * @return {null|Object}  - Default of null\n   */\n  start(inputs, state, element) {\n    return null;\n  }\n\n  /**\n   * move() - Event hook for the move of a gesture\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @param {Object} state - The state object of the current region.\n   * @param {Element} element - The element associated to the binding.\n   * @return {null|Object} - Default of null\n   */\n  move(inputs, state, element) {\n    return null;\n  }\n\n  /**\n   * end() - Event hook for the move of a gesture\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @return {null|Object}  - Default of null\n   */\n  end(inputs) {\n    return null;\n  }\n\n\t/**\n\t* isValid() - Pre-checks to ensure the invariants of a gesture are satisfied.\n\t* @param {Array} inputs - The array of Inputs on the screen\n\t* @param {Object} state - The state object of the current region.\n\t* @param {Element} element - The element associated to the binding.\n\t* @return {boolean} - If the gesture is valid\n\t*/\n\tisValid(inputs, state, element) {\n    let valid = true;\n    // Checks to see if all touches originated from within the target element.\n    if (inputs.length > 1) {\n      inputs.forEach((input) => {\n        if (!util.isInside(input.initial.x, input.initial.y, element)) {\n          valid = false;\n        }\n      });\n    }\n    return valid;\n    }\n\n}\n\nexport default Gesture;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Gesture.js","/**\n * @file util.js\n * Various accessor and mutator functions to handle state and validation.\n */\n\nconst CIRCLE_DEGREES = 360;\nconst HALF_CIRCLE_DEGREES = 180;\n\n/**\n *  Contains generic helper functions\n * @type {Object}\n * @namespace util\n */\nlet util = {\n\n  /**\n   * Normalizes window events to be either of type start, move, or end.\n   * @param {String} type - The event type emitted by the browser\n   * @return {null|String} - The normalized event, or null if it is an\n   * event not predetermined.\n   */\n  normalizeEvent(type) {\n    switch (type) {\n      case 'mousedown' :\n      case 'touchstart' :\n      case 'pointerdown' :\n        return 'start';\n      case 'mousemove' :\n      case 'touchmove' :\n      case 'pointermove' :\n        return 'move';\n      case 'mouseup' :\n      case 'touchend' :\n      case 'pointerup' :\n        return 'end';\n      default :\n        return null;\n    }\n  },\n  /* normalizeEvent*/\n\n  /**\n   * Determines if the current and previous coordinates are within or\n   * up to a certain tolerance.\n   * @param {Number} currentX - Current event's x coordinate\n   * @param {Number} currentY - Current event's y coordinate\n   * @param {Number} previousX - Previous event's x coordinate\n   * @param {Number} previousY - Previous event's y coordinate\n   * @param {Number} tolerance - The tolerance in pixel value.\n   * @return {boolean} - true if the current coordinates are\n   * within the tolerance, false otherwise\n   */\n  isWithin(currentX, currentY, previousX, previousY, tolerance) {\n    return ((Math.abs(currentY - previousY) <= tolerance) &&\n    (Math.abs(currentX - previousX) <= tolerance));\n  },\n  /* isWithin*/\n\n  /**\n   * Calculates the distance between two points.\n   * @param {Number} x0\n   * @param {Number} x1\n   * @param {Number} y0\n   * @param {Number} y1\n   * @return {number} The numerical value between two points\n   */\n  distanceBetweenTwoPoints(x0, x1, y0, y1) {\n    let dist = (Math.sqrt(((x1 - x0) * (x1 - x0)) + ((y1 - y0) * (y1 - y0))));\n    return Math.round(dist * 100) / 100;\n  },\n\n  /**\n   * Calculates the midpoint coordinates between two points.\n   * @param {Number} x0\n   * @param {Number} x1\n   * @param {Number} y0\n   * @param {Number} y1\n   * @return {Object} The coordinates of the midpoint.\n   */\n  getMidpoint(x0, x1, y0, y1) {\n    return {\n      x: ((x0 + x1) / 2),\n      y: ((y0 + y1) / 2),\n    };\n  },\n  /**\n   * Calculates the angle between the projection and an origin point.\n   *   |                (projectionX,projectionY)\n   *   |             /°\n   *   |          /\n   *   |       /\n   *   |    / θ\n   *   | /__________\n   *   ° (originX, originY)\n   * @param {number} originX\n   * @param {number} originY\n   * @param {number} projectionX\n   * @param {number} projectionY\n   * @return {number} - Degree along the unit circle where the project lies\n   */\n  getAngle(originX, originY, projectionX, projectionY) {\n    let angle = Math.atan2(projectionY - originY, projectionX - originX) *\n      ((HALF_CIRCLE_DEGREES) / Math.PI);\n    return CIRCLE_DEGREES - ((angle < 0) ? (CIRCLE_DEGREES + angle) : angle);\n  },\n  /**\n   * Calculates the angular distance in degrees between two angles\n   *  along the unit circle\n   * @param {number} start - The starting point in degrees\n   * @param {number} end - The ending point in degrees\n   * @return {number} The number of degrees between the\n   * starting point and ending point. Negative degrees denote a clockwise\n   * direction, and positive a counter-clockwise direction.\n   */\n  getAngularDistance(start, end) {\n    let angle = (end - start) % CIRCLE_DEGREES;\n    let sign = (angle < 0) ? 1 : -1;\n    angle = Math.abs(angle);\n    return (angle > HALF_CIRCLE_DEGREES) ?\n    sign * (CIRCLE_DEGREES - angle) : sign * angle;\n  },\n\n  /**\n   * Calculates the velocity of pixel/milliseconds between two points\n   * @param {Number} startX\n   * @param {Number} startY\n   * @param {Number} startTime\n   * @param {Number} endX\n   * @param {Number} endY\n   * @param {Number} endTime\n   * @return {Number} velocity of px/time\n   */\n  getVelocity(startX, startY, startTime, endX, endY, endTime) {\n    let distance = this.distanceBetweenTwoPoints(startX, endX, startY, endY);\n    return (distance / (endTime - startTime));\n  },\n\n  /**\n   * Returns the farthest right input\n   * @param {Array} inputs\n   * @return {Object}\n   */\n  getRightMostInput(inputs) {\n    let rightMost = null;\n    let distance = Number.MIN_VALUE;\n    inputs.forEach((input) => {\n      if (input.initial.x > distance) {\n        rightMost = input;\n      }\n    });\n    return rightMost;\n  },\n\n  /**\n   * Determines is the value is an integer and not a floating point\n   * @param {Mixed} value\n   * @return {boolean}\n   */\n  isInteger(value) {\n    return (typeof value === 'number') && (value % 1 === 0);\n  },\n\n  /**\n   * Determines if the x,y position of the input is within then target.\n   * @param {Number} x -clientX\n   * @param {Number} y -clientY\n   * @param {Element} target\n   * @return {Boolean}\n   */\n  isInside(x, y, target) {\n    const rect = target.getBoundingClientRect();\n    return ((x > rect.left && x < rect.left + rect.width) &&\n    (y > rect.top && y < rect.top + rect.height));\n  },\n  /**\n   * Polyfill for event.propagationPath\n   * @param {Event} event\n   * @return {Array}\n   */\n  getPropagationPath(event) {\n    if (event.path) {\n      return event.path;\n    } else {\n      let path = [];\n      let node = event.target;\n      while (node != document) {\n        path.push(node);\n        node = node.parentNode;\n      }\n\n      return path;\n    }\n  },\n\n  /**\n   * Retrieve the index inside the path array\n   * @param {Array} path\n   * @param {Element} element\n   * @return {Element}\n   */\n  getPathIndex(path, element) {\n    let index = path.length;\n\n    path.forEach((obj, i) => {\n      if (obj === element) {\n        index = i;\n      }\n    });\n\n    return index;\n  },\n\n  setMSPreventDefault(element) {\n    element.style['-ms-content-zooming'] = 'none';\n    element.style['touch-action'] = 'none';\n  },\n\n  removeMSPreventDefault(element) {\n    element.style['-ms-content-zooming'] = '';\n    element.style['touch-action'] = '';\n  },\n};\nexport default util;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/util.js","/**\n * @file arbiter.js\n * Contains logic for the dispatcher\n */\n\nimport dispatcher from './dispatcher.js';\nimport interpreter from './interpreter.js';\nimport util from './util.js';\n\n/**\n * Function that handles event flow, negotiating with the interpreter,\n * and dispatcher.\n * 1. Receiving all touch events in the window.\n * 2. Determining which gestures are linked to the target element.\n * 3. Negotiating with the Interpreter what event should occur.\n * 4. Sending events to the dispatcher to emit events to the target.\n * @param {Event} event - The event emitted from the window object.\n * @param {Object} region - The region object of the current listener.\n */\nfunction arbiter(event, region) {\n  const state = region.state;\n\n  /*\n   Return if a gesture is not in progress and won't be. Also catches the case\n   where a previous event is in a partial state (2 finger pan, waits for both\n   inputs to reach touchend)\n   */\n  if (state.inputs.length === 0 && util.normalizeEvent(event.type) !==\n    'start') {\n    return;\n  }\n\n  /*\n   Check for 'stale' or events that lost focus\n   (e.g. a pan goes off screen/off region.)\n   Does not affect mobile devices.\n   */\n  if (typeof event.buttons !== 'undefined' &&\n    util.normalizeEvent(event.type) !== 'end' &&\n    event.buttons === 0) {\n    state.resetInputs();\n    return;\n  }\n\n  // Update the state with the new events. If the event is stopped, return;\n  if (!state.updateInputs(event, region.element)) {\n    return;\n  }\n\n  // Retrieve the initial target from any one of the inputs\n  const bindings = state.retrieveBindingsByInitialPos();\n  if (bindings.length > 0) {\n    if (region.preventDefault) {\n      util.setMSPreventDefault(region.element);\n      event.preventDefault ? event.preventDefault():(event.returnValue = false);\n    } else {\n      util.removeMSPreventDefault(region.element);\n    }\n\n    const toBeDispatched = {};\n    const gestures = interpreter(bindings, event, state);\n\n    /* Determine the deepest path index to emit the event\n     from, to avoid duplicate events being fired. */\n\n    gestures.forEach((gesture) => {\n      const id = gesture.binding.gesture.id;\n      if (toBeDispatched[id]) {\n        const path = util.getPropagationPath(event);\n        if (util.getPathIndex(path, gesture.binding.element) <\n          util.getPathIndex(path, toBeDispatched[id].binding.element)) {\n          toBeDispatched[id] = gesture;\n        }\n      } else {\n        toBeDispatched[id] = gesture;\n      }\n    });\n\n    Object.keys(toBeDispatched).forEach((index) => {\n      const gesture = toBeDispatched[index];\n      dispatcher(gesture.binding, gesture.data, gesture.events);\n    });\n  }\n\n  let endCount = 0;\n  state.inputs.forEach((input) => {\n    if (input.getCurrentEventType() === 'end') {\n      endCount++;\n    }\n  });\n\n  if (endCount === state.inputs.length) {\n    state.resetInputs();\n  }\n}\n\nexport default arbiter;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/arbiter.js","/**\n * @file dispatcher.js\n * Contains logic for the dispatcher\n */\n\n/**\n * Emits data at the target element if available, and bubbles up from\n * the target to the parent until the document has been reached.\n * Called from the arbiter.\n * @param {Binding} binding - An object of type Binding\n * @param {Object} data - The metadata computed by the gesture being emitted.\n * @param {Array} events - An array of ZingEvents\n *  corresponding to the inputs on the screen.\n */\nfunction dispatcher(binding, data, events) {\n  data.events = events;\n\n  const newEvent = new CustomEvent(binding.gesture.getId(), {\n    detail: data,\n    bubbles: true,\n    cancelable: true,\n  });\n  emitEvent(binding.element, newEvent, binding);\n}\n\n/**\n * Emits the new event. Unbinds the event if the event was registered\n * at bindOnce.\n * @param {Element} target - Element object to emit the event to.\n * @param {Event} event - The CustomEvent to emit.\n * @param {Binding} binding - An object of type Binding\n */\nfunction emitEvent(target, event, binding) {\n  target.dispatchEvent(event);\n  if (binding.bindOnce) {\n    ZingTouch.unbind(binding.element, binding.gesture.getType());\n  }\n}\n\nexport default dispatcher;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/dispatcher.js","/**\n * @file interpreter.js\n * Contains logic for the interpreter\n */\n\nimport util from './util.js';\n\n/**\n * Receives an event and an array of Bindings (element -> gesture handler)\n * to determine what event will be emitted. Called from the arbiter.\n * @param {Array} bindings - An array containing Binding objects\n * that associate the element to an event handler.\n * @param {Object} event - The event emitted from the window.\n * @param {Object} state - The state object of the current listener.\n * @return {Object | null} - Returns an object containing a binding and\n * metadata, or null if a gesture will not be emitted.\n */\nfunction interpreter(bindings, event, state) {\n  const evType = util.normalizeEvent(event.type);\n  const candidates = [];\n  bindings.forEach((binding) => {\n    let result = binding.gesture[evType](state.inputs, state, binding.element);\n    if (result) {\n      const events = [];\n      state.inputs.forEach((input) => {\n        events.push(input.current);\n      });\n\n      candidates.push({\n        binding: binding,\n        data: result,\n        events: events,\n      });\n    }\n  });\n\n  return candidates;\n}\n\nexport default interpreter;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/interpreter.js","/**\n * @file State.js\n */\n\nimport Gesture from './../../gestures/Gesture.js';\nimport Expand from './../../gestures/Expand.js';\nimport Pan from './../../gestures/Pan.js';\nimport Pinch from './../../gestures/Pinch.js';\nimport Rotate from './../../gestures/Rotate.js';\nimport Swipe from './../../gestures/Swipe.js';\nimport Tap from './../../gestures/Tap.js';\nimport Binding from './Binding.js';\nimport Input from './Input.js';\nimport util from './../util.js';\n\nconst DEFAULT_MOUSE_ID = 0;\n\n/**\n * Creates an object related to a Region's state,\n * and contains helper methods to update and clean up different states.\n */\nclass State {\n\n  /**\n   * Constructor for the State class.\n   * @param {String} regionId - The id the region this state is bound to.\n   */\n  constructor(regionId) {\n    /**\n     * The id for the region this state is bound to.\n     * @type {String}\n     */\n    this.regionId = regionId;\n\n    /**\n     * An array of current and recently inactive\n     *  Input objects related to a gesture.\n     * @type {Input}\n     */\n    this.inputs = [];\n\n    /**\n     * An array of Binding objects; The list of relations between elements,\n     *   their gestures, and the handlers.\n     * @type {Binding}\n     */\n    this.bindings = [];\n\n    /**\n     * The number of gestures that have been registered with this state\n     * @type {Number}\n     */\n    this.numGestures = 0;\n\n    /**\n     * A key/value map all the registered gestures for the listener.\n     *  Note: Can only have one gesture registered to one key.\n     * @type {Object}\n     */\n    this.registeredGestures = {};\n\n    this.registerGesture(new Expand(), 'expand');\n    this.registerGesture(new Pan(), 'pan');\n    this.registerGesture(new Rotate(), 'rotate');\n    this.registerGesture(new Pinch(), 'pinch');\n    this.registerGesture(new Swipe(), 'swipe');\n    this.registerGesture(new Tap(), 'tap');\n  }\n\n  /**\n   * Creates a new binding with the given element and gesture object.\n   * If the gesture object provided is unregistered, it's reference\n   * will be saved in as a binding to be later referenced.\n   * @param  {Element} element - The element the gesture is bound to.\n   * @param {String|Object} gesture  - Either a name of a registered gesture,\n   *  or an unregistered  Gesture object.\n   * @param {Function} handler - The function handler to be called\n   *  when the event is emitted. Used to bind/unbind.\n   * @param {Boolean} capture - Whether the gesture is to be\n   *  detected in the capture of bubble phase. Used to bind/unbind.\n   * @param {Boolean} bindOnce - Option to bind once and\n   *  only emit the event once.\n   */\n  addBinding(element, gesture, handler, capture, bindOnce) {\n    let boundGesture;\n\n    // Error type checking.\n    if (element && typeof element.tagName === 'undefined') {\n      throw new Error('Parameter element is an invalid object.');\n    }\n\n    if (typeof handler !== 'function') {\n      throw new Error('Parameter handler is invalid.');\n    }\n\n    if (typeof gesture === 'string' &&\n      Object.keys(this.registeredGestures).indexOf(gesture) === -1) {\n      throw new Error('Parameter ' + gesture + ' is not a registered gesture');\n    } else if (typeof gesture === 'object' && !(gesture instanceof Gesture)) {\n      throw new Error('Parameter for the gesture is not of a Gesture type');\n    }\n\n    if (typeof gesture === 'string') {\n      boundGesture = this.registeredGestures[gesture];\n    } else {\n      boundGesture = gesture;\n      if (boundGesture.id === '') {\n        this.assignGestureId(boundGesture);\n      }\n    }\n\n    this.bindings.push(new Binding(element, boundGesture,\n      handler, capture, bindOnce));\n    element.addEventListener(boundGesture.getId(), handler, capture);\n  }\n\n  /**\n   * Retrieves the Binding by which an element is associated to.\n   * @param {Element} element - The element to find bindings to.\n   * @return {Array} - An array of Bindings to which that element is bound\n   */\n  retrieveBindingsByElement(element) {\n    let matches = [];\n    this.bindings.map((binding) => {\n      if (binding.element === element) {\n        matches.push(binding);\n      }\n    });\n    return matches;\n  }\n\n  /**\n   * Retrieves all bindings based upon the initial X/Y position of the inputs.\n   * e.g. if gesture started on the correct target element,\n   *  but diverted away into the correct region, this would still be valid.\n   * @return {Array} - An array of Bindings to which that element is bound\n   */\n  retrieveBindingsByInitialPos() {\n    let matches = [];\n    this.bindings.forEach((binding) => {\n      // Determine if at least one input is in the target element.\n      // They should all be in the region based upon a prior check\n      let inputsInside = this.inputs.filter((input) => {\n        return util.isInside(input.initial.x, input.initial.y, binding.element);\n      });\n      if (inputsInside.length > 0) {\n        matches.push(binding);\n      }\n    });\n    return matches;\n  }\n\n  /**\n   * Updates the inputs with new information based upon a new event being fired.\n   * @param {Event} event - The event being captured.\n   * @param {Element} regionElement - The element where\n   *  this current Region is bound to.\n   * @return {boolean} - returns true for a successful update,\n   *  false if the event is invalid.\n   */\n  updateInputs(event, regionElement) {\n    let identifier = DEFAULT_MOUSE_ID;\n    let eventType = (event.touches) ?\n      'TouchEvent' : (event.pointerType) ? 'PointerEvent' : 'MouseEvent';\n    switch (eventType) {\n      case 'TouchEvent':\n\n        for (let index in event.changedTouches) {\n          if (event.changedTouches.hasOwnProperty(index) &&\n            util.isInteger((parseInt(index)))) {\n            identifier = event.changedTouches[index].identifier;\n            update(event, this, identifier, regionElement);\n          }\n        }\n        break;\n\n      case 'PointerEvent':\n        identifier = event.pointerId;\n        update(event, this, identifier, regionElement);\n        break;\n\n      case 'MouseEvent':\n      default:\n        update(event, this, DEFAULT_MOUSE_ID, regionElement);\n        break;\n    }\n    return true;\n\n    function update(event, state, identifier, regionElement) {\n      let eventType = util.normalizeEvent(event.type);\n      let input = findInputById(state.inputs, identifier);\n\n      // A starting input was not cleaned up properly and still exists.\n      if (eventType === 'start' && input) {\n        state.resetInputs();\n        return;\n      }\n\n      // An input has moved outside the region.\n      if (eventType !== 'start' &&\n        input &&\n        !util.isInside(input.current.x, input.current.y, regionElement)) {\n         state.resetInputs();\n        return;\n      }\n\n      if (eventType !== 'start' && !input) {\n        state.resetInputs();\n        return;\n      }\n\n      if (eventType === 'start') {\n        state.inputs.push(new Input(event, identifier));\n      } else {\n        input.update(event, identifier);\n      }\n    }\n  }\n\n  /**\n   * Removes all inputs from the state, allowing for a new gesture.\n   */\n  resetInputs() {\n    this.inputs = [];\n  }\n\n  /**\n   * Counts the number of active inputs at any given time.\n   * @return {Number} - The number of active inputs.\n   */\n  numActiveInputs() {\n    let endType = this.inputs.filter((input) => {\n      return input.current.type !== 'end';\n    });\n    return endType.length;\n  }\n\n  /**\n   * Register the gesture to the current region.\n   * @param {Object} gesture - The gesture to register\n   * @param {String} key - The key to define the new gesture as.\n   */\n  registerGesture(gesture, key) {\n    this.assignGestureId(gesture);\n    this.registeredGestures[key] = gesture;\n  }\n\n  /**\n   * Tracks the gesture to this state object to become uniquely identifiable.\n   * Useful for nested Regions.\n   * @param {Gesture} gesture - The gesture to track\n   */\n  assignGestureId(gesture) {\n    gesture.setId(this.regionId + '-' + this.numGestures++);\n  }\n\n}\n/**\n * Searches through each input, comparing the browser's identifier key\n *  for touches, to the stored one in each input\n * @param {Array} inputs - The array of inputs in state.\n * @param {String} identifier - The identifier the browser has assigned.\n * @return {Input} - The input object with the corresponding identifier,\n *  null if it did not find any.\n */\nfunction findInputById(inputs, identifier) {\n  for (let i = 0; i < inputs.length; i++) {\n    if (inputs[i].identifier === identifier) {\n      return inputs[i];\n    }\n  }\n\n  return null;\n}\n\nexport default State;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/State.js","/**\n * @file Expand.js\n * Contains the Expand class\n */\n\nimport Distance from './Distance.js';\n\n/**\n * An Expand is defined as two inputs moving farther away from each other.\n * This gesture does not account for any start/end events to allow for the\n * event to interact with the Pan and Pinch events.\n * @class Expand\n */\nclass Expand extends Distance {\n\n  /**\n   * Constructor function for the Expand class.\n   * @param {object} options\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'expand';\n  }\n\n}\n\nexport default Expand;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Expand.js","/**\n * @file Distance.js\n * Contains the abstract Distance class\n */\n\nimport Gesture from './Gesture.js';\nimport util from './../core/util.js';\n\nconst DEFAULT_INPUTS = 2;\nconst DEFAULT_MIN_THRESHOLD = 1;\n\n/**\n * A Distance is defined as two inputs moving either together or apart.\n * @class Distance\n */\nclass Distance extends Gesture {\n  /**\n   * Constructor function for the Distance class.\n   * @param {Object} options\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'distance';\n\n    /**\n     * The minimum amount in pixels the inputs must move until it is fired.\n     * @type {Number}\n     */\n    this.threshold = (options && options.threshold) ?\n      options.threshold : DEFAULT_MIN_THRESHOLD;\n  }\n\n  /**\n   * Event hook for the start of a gesture. Initialized the lastEmitted\n   * gesture and stores it in the first input for reference events.\n   * @param {Array} inputs\n   */\n  start(inputs, state, element) {\n  if(!this.isValid(inputs, state, element)) {\n    return null;\n  }\n    if (inputs.length === DEFAULT_INPUTS) {\n      // Store the progress in the first input.\n      let progress = inputs[0].getGestureProgress(this.type);\n      progress.lastEmittedDistance = util.distanceBetweenTwoPoints(\n        inputs[0].current.x,\n        inputs[1].current.x,\n        inputs[0].current.y,\n        inputs[1].current.y);\n    }\n  }\n\n  /**\n   * Event hook for the move of a gesture.\n   *  Determines if the two points are moved in the expected direction relative\n   *  to the current distance and the last distance.\n   * @param {Array} inputs - The array of Inputs on the screen.\n   * @param {Object} state - The state object of the current region.\n   * @param {Element} element - The element associated to the binding.\n   * @return {Object | null} - Returns the distance in pixels between two inputs\n   */\n  move(inputs, state, element) {\n    if (state.numActiveInputs() === DEFAULT_INPUTS) {\n      let currentDistance = util.distanceBetweenTwoPoints(\n        inputs[0].current.x,\n        inputs[1].current.x,\n        inputs[0].current.y,\n        inputs[1].current.y);\n      let lastDistance = util.distanceBetweenTwoPoints(\n        inputs[0].previous.x,\n        inputs[1].previous.x,\n        inputs[0].previous.y,\n        inputs[1].previous.y);\n\n      const centerPoint = util.getMidpoint(\n        inputs[0].current.x,\n        inputs[1].current.x,\n        inputs[0].current.y,\n        inputs[1].current.y);\n\n      // Retrieve the first input's progress.\n      let progress = inputs[0].getGestureProgress(this.type);\n\n      if (this.constructor.name === 'Expand') {\n        if (currentDistance < lastDistance) {\n          progress.lastEmittedDistance = currentDistance;\n        } else if ((currentDistance - progress.lastEmittedDistance >=\n          this.threshold)) {\n          progress.lastEmittedDistance = currentDistance;\n          return {\n            distance: currentDistance,\n            center: centerPoint,\n          };\n        }\n      } else {\n        if (currentDistance > lastDistance) {\n          progress.lastEmittedDistance = currentDistance;\n        } else if (currentDistance < lastDistance &&\n          (progress.lastEmittedDistance - currentDistance >= this.threshold)) {\n          progress.lastEmittedDistance = currentDistance;\n          return {\n            distance: currentDistance,\n            center: centerPoint,\n          };\n        }\n      }\n\n      return null;\n    }\n  }\n}\n\nexport default Distance;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Distance.js","/**\n * @file Pan.js\n * Contains the Pan class\n */\n\nimport Gesture from './Gesture.js';\nimport util from './../core/util.js';\n\nconst DEFAULT_INPUTS = 1;\nconst DEFAULT_MIN_THRESHOLD = 1;\n\n/**\n * A Pan is defined as a normal movement in any direction on a screen.\n * Pan gestures do not track start events and can interact with pinch and \\\n *  expand gestures.\n * @class Pan\n */\nclass Pan extends Gesture {\n  /**\n   * Constructor function for the Pan class.\n   * @param {Object} [options] - The options object.\n   * @param {Number} [options.numInputs=1] - Number of inputs for the\n   *  Pan gesture.\n   * @param {Number} [options.threshold=1] - The minimum number of\n   * pixels the input has to move to trigger this gesture.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'pan';\n\n    /**\n     * The number of inputs to trigger a Pan can be variable,\n     * and the maximum number being a factor of the browser.\n     * @type {Number}\n     */\n    this.numInputs = (options && options.numInputs) ?\n      options.numInputs : DEFAULT_INPUTS;\n\n    /**\n     * The minimum amount in pixels the pan must move until it is fired.\n     * @type {Number}\n     */\n    this.threshold = (options && options.threshold) ?\n      options.threshold : DEFAULT_MIN_THRESHOLD;\n  }\n\n  /**\n   * Event hook for the start of a gesture. Marks each input as active,\n   * so it can invalidate any end events.\n   * @param {Array} inputs\n   */\n  start(inputs) {\n    inputs.forEach((input) => {\n      let progress = input.getGestureProgress(this.getId());\n      progress.active = true;\n      progress.lastEmitted = {\n        x: input.current.x,\n        y: input.current.y,\n      };\n    });\n  }\n\n  /**\n   * move() - Event hook for the move of a gesture.\n   * Fired whenever the input length is met, and keeps a boolean flag that\n   * the gesture has fired at least once.\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @param {Object} state - The state object of the current region.\n   * @param {Element} element - The element associated to the binding.\n   * @return {Object} - Returns the distance in pixels between the two inputs.\n   */\n  move(inputs, state, element) {\n    if (this.numInputs === inputs.length) {\n      var output = {\n        data: [],\n      };\n      for (let i = 0; i < inputs.length; i++) {\n        let progress = inputs[i].getGestureProgress(this.getId());\n\n        let reachedThreshold = false;\n\n        // Check threshold distance\n        const yThreshold = Math.abs(inputs[i].current.y -\n            progress.lastEmitted.y) > this.threshold;\n        const xThreshold = Math.abs(inputs[i].current.x -\n            progress.lastEmitted.x) > this.threshold;\n        reachedThreshold = yThreshold || xThreshold;\n\n        if (progress.active && reachedThreshold) {\n          output.data[i] = {\n            distanceFromOrigin: util.distanceBetweenTwoPoints(\n              inputs[i].initial.x,\n              inputs[i].current.x,\n              inputs[i].initial.y,\n              inputs[i].current.y),\n            directionFromOrigin: util.getAngle(\n              inputs[i].initial.x,\n              inputs[i].initial.y,\n              inputs[i].current.x,\n              inputs[i].current.y),\n            currentDirection: util.getAngle(\n              progress.lastEmitted.x,\n              progress.lastEmitted.y,\n              inputs[i].current.x,\n              inputs[i].current.y),\n          };\n          progress.lastEmitted.x = inputs[i].current.x;\n          progress.lastEmitted.y = inputs[i].current.y;\n        } else {\n          return null;\n        }\n      }\n    }\n\n    return output;\n  }\n\n  /* move*/\n\n  /**\n   * end() - Event hook for the end of a gesture. If the gesture has at least\n   * fired once, then it ends on the first end event such that any remaining\n   * inputs will not trigger the event until all inputs have reached the\n   * touchend event. Any touchend->touchstart events that occur before all\n   * inputs are fully off the screen should not fire.\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @return {null} - null if the gesture is not to be emitted,\n   *  Object with information otherwise.\n   */\n  end(inputs) {\n    inputs.forEach((input) => {\n      let progress = input.getGestureProgress(this.getId());\n      progress.active = false;\n    });\n    return null;\n  }\n\n  /* end*/\n}\n\nexport default Pan;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Pan.js","/**\n * @file Pinch.js\n * Contains the Pinch class\n */\n\nimport Distance from './Distance.js';\nimport util from './../core/util.js';\n\n/**\n * An Pinch is defined as two inputs moving closer to each other.\n * This gesture does not account for any start/end events to allow for the event\n * to interact with the Pan and Pinch events.\n * @class Pinch\n */\nclass Pinch extends Distance {\n  /**\n   * Constructor function for the Pinch class.\n   * @param {Object} options\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'pinch';\n  }\n\n}\n\nexport default Pinch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Pinch.js","/**\n * @file Rotate.js\n * Contains the Rotate class\n */\n\nimport Gesture from './Gesture.js';\nimport util from './../core/util.js';\n\nconst MAX_INPUTS = 2;\n\n/**\n * A Rotate is defined as two inputs moving about a circle,\n * maintaining a relatively equal radius.\n * @class Rotate\n */\nclass Rotate extends Gesture {\n  /**\n   * Constructor function for the Rotate class.\n   */\n  constructor() {\n    super();\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'rotate';\n  }\n\n  /**\n   * move() - Event hook for the move of a gesture. Obtains the midpoint of two\n   * the two inputs and calculates the projection of the right most input along\n   * a unit circle to obtain an angle. This angle is compared to the previously\n   * calculated angle to output the change of distance, and is compared to the\n   * initial angle to output the distance from the initial angle to the current\n   * angle.\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @param {Object} state - The state object of the current listener.\n   * @param {Element} element - The element associated to the binding.\n   * @return {null} - null if this event did not occur\n   * @return {Object} obj.angle - The current angle along the unit circle\n   * @return {Object} obj.distanceFromOrigin - The angular distance travelled\n   * from the initial right most point.\n   * @return {Object} obj.distanceFromLast - The change of angle between the\n   * last position and the current position.\n   */\n  move(inputs, state, element) {\n    if (state.numActiveInputs() <= MAX_INPUTS) {\n      let referencePivot;\n      let diffX;\n      let diffY;\n      let input;\n      if (state.numActiveInputs() === 1) {\n        let bRect = element.getBoundingClientRect();\n        referencePivot = {\n          x: bRect.left + bRect.width / 2,\n          y: bRect.top + bRect.height / 2,\n        };\n        input = inputs[0];\n        diffX = diffY = 0;\n      } else {\n        referencePivot = util.getMidpoint(\n          inputs[0].initial.x,\n          inputs[1].initial.x,\n          inputs[0].initial.y,\n          inputs[1].initial.y);\n        let currentPivot = util.getMidpoint(\n          inputs[0].current.x,\n          inputs[1].current.x,\n          inputs[0].current.y,\n          inputs[1].current.y);\n        diffX = referencePivot.x - currentPivot.x;\n        diffY = referencePivot.y - currentPivot.y;\n        input = util.getRightMostInput(inputs);\n      }\n\n      // Translate the current pivot point.\n      let currentAngle = util.getAngle(referencePivot.x, referencePivot.y,\n        input.current.x + diffX, input.current.y + diffY);\n\n      let progress = input.getGestureProgress(this.getId());\n      if (!progress.initialAngle) {\n        progress.initialAngle = progress.previousAngle = currentAngle;\n        progress.distance = progress.change = 0;\n      } else {\n        progress.change = util.getAngularDistance(\n          progress.previousAngle,\n          currentAngle);\n        progress.distance = progress.distance + progress.change;\n      }\n\n      progress.previousAngle = currentAngle;\n\n      return {\n        angle: currentAngle,\n        distanceFromOrigin: progress.distance,\n        distanceFromLast: progress.change,\n      };\n    }\n\n    return null;\n  }\n\n  /* move*/\n}\n\nexport default Rotate;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Rotate.js","/**\n * @file Swipe.js\n * Contains the Swipe class\n */\n\nimport Gesture from './Gesture.js';\nimport util from './../core/util.js';\n\nconst DEFAULT_INPUTS = 1;\nconst DEFAULT_MAX_REST_TIME = 100;\nconst DEFAULT_ESCAPE_VELOCITY = 0.2;\nconst DEFAULT_TIME_DISTORTION = 100;\nconst DEFAULT_MAX_PROGRESS_STACK = 10;\n\n/**\n * A swipe is defined as input(s) moving in the same direction in an relatively\n * increasing velocity and leaving the screen at some point before it drops\n * below it's escape velocity.\n * @class Swipe\n */\nclass Swipe extends Gesture {\n\n  /**\n   * Constructor function for the Swipe class.\n   * @param {Object} [options] - The options object.\n   * @param {Number} [options.numInputs] - The number of inputs to trigger a\n   * Swipe can be variable, and the maximum number being a factor of the browser\n   *  move and current move events.\n   * @param {Number} [options.maxRestTime] - The maximum resting time a point\n   *  has between it's last\n   * @param {Number} [options.escapeVelocity] - The minimum velocity the input\n   *  has to be at to emit a swipe.\n   * @param {Number} [options.timeDistortion] - (EXPERIMENTAL) A value of time\n   *  in milliseconds to distort between events.\n   * @param {Number} [options.maxProgressStack] - (EXPERIMENTAL)The maximum\n   *  amount of move events to keep\n   * track of for a swipe.\n   */\n  constructor(options) {\n    super();\n    /**\n     * The type of the Gesture\n     * @type {String}\n     */\n    this.type = 'swipe';\n\n    /**\n     * The number of inputs to trigger a Swipe can be variable,\n     * and the maximum number being a factor of the browser.\n     * @type {Number}\n     */\n    this.numInputs = (options && options.numInputs) ?\n      options.numInputs : DEFAULT_INPUTS;\n\n    /**\n     * The maximum resting time a point has between it's last move and\n     * current move events.\n     * @type {Number}\n     */\n    this.maxRestTime = (options && options.maxRestTime) ?\n      options.maxRestTime : DEFAULT_MAX_REST_TIME;\n\n    /**\n     * The minimum velocity the input has to be at to emit a swipe.\n     * This is useful for determining the difference between\n     * a swipe and a pan gesture.\n     * @type {number}\n     */\n    this.escapeVelocity = (options && options.escapeVelocity) ?\n      options.escapeVelocity : DEFAULT_ESCAPE_VELOCITY;\n\n    /**\n     * (EXPERIMENTAL) A value of time in milliseconds to distort between events.\n     * Browsers do not accurately measure time with the Date constructor in\n     * milliseconds, so consecutive events sometimes display the same timestamp\n     * but different x/y coordinates. This will distort a previous time\n     * in such cases by the timeDistortion's value.\n     * @type {number}\n     */\n    this.timeDistortion = (options && options.timeDistortion) ?\n      options.timeDistortion : DEFAULT_TIME_DISTORTION;\n\n    /**\n     * (EXPERIMENTAL) The maximum amount of move events to keep track of for a\n     * swipe. This helps give a more accurate estimate of the user's velocity.\n     * @type {number}\n     */\n    this.maxProgressStack = (options && options.maxProgressStack) ?\n      options.maxProgressStack : DEFAULT_MAX_PROGRESS_STACK;\n  }\n\n  /**\n   * Event hook for the move of a gesture. Captures an input's x/y coordinates\n   * and the time of it's event on a stack.\n   * @param {Array} inputs - The array of Inputs on the screen.\n   * @param {Object} state - The state object of the current region.\n   * @param {Element} element - The element associated to the binding.\n   * @return {null} - Swipe does not emit from a move.\n   */\n  move(inputs, state, element) {\n    if (this.numInputs === inputs.length) {\n      for (let i = 0; i < inputs.length; i++) {\n        let progress = inputs[i].getGestureProgress(this.getId());\n        if (!progress.moves) {\n          progress.moves = [];\n        }\n\n        progress.moves.push({\n          time: new Date().getTime(),\n          x: inputs[i].current.x,\n          y: inputs[i].current.y,\n        });\n\n        if (progress.length > this.maxProgressStack) {\n          progress.moves.shift();\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /* move*/\n\n  /**\n   * Determines if the input's history validates a swipe motion.\n   * Determines if it did not come to a complete stop (maxRestTime), and if it\n   * had enough of a velocity to be considered (ESCAPE_VELOCITY).\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @return {null|Object} - null if the gesture is not to be emitted,\n   *  Object with information otherwise.\n   */\n  end(inputs) {\n    if (this.numInputs === inputs.length) {\n      let output = {\n        data: [],\n      };\n\n      for (var i = 0; i < inputs.length; i++) {\n        // Determine if all input events are on the 'end' event.\n        if (inputs[i].current.type !== 'end') {\n          return;\n        }\n\n        let progress = inputs[i].getGestureProgress(this.getId());\n        if (progress.moves && progress.moves.length > 2) {\n          // CHECK : Return if the input has not moved in maxRestTime ms.\n\n          let currentMove = progress.moves.pop();\n          if ((new Date().getTime()) - currentMove.time > this.maxRestTime) {\n            return null;\n          }\n\n          let lastMove;\n          let index = progress.moves.length - 1;\n\n          /* Date is unreliable, so we retrieve the last move event where\n           the time is not the same. */\n          while (index !== -1) {\n            if (progress.moves[index].time !== currentMove.time) {\n              lastMove = progress.moves[index];\n              break;\n            }\n\n            index--;\n          }\n\n          /* If the date is REALLY unreliable, we apply a time distortion\n           to the last event.\n           */\n          if (!lastMove) {\n            lastMove = progress.moves.pop();\n            lastMove.time += this.timeDistortion;\n          }\n\n          var velocity = util.getVelocity(lastMove.x, lastMove.y, lastMove.time,\n            currentMove.x, currentMove.y, currentMove.time);\n\n          output.data[i] = {\n            velocity: velocity,\n            distance: util.distanceBetweenTwoPoints(lastMove.x, currentMove.x, lastMove.y, currentMove.y),\n            duration:  currentMove.time - lastMove.time,\n            currentDirection: util.getAngle(\n              lastMove.x,\n              lastMove.y,\n              currentMove.x,\n              currentMove.y),\n          };\n        }\n      }\n\n      for (var i = 0; i < output.data.length; i++) {\n        if (velocity < this.escapeVelocity) {\n          return null;\n        }\n      }\n\n      if (output.data.length > 0) {\n        return output;\n      }\n    }\n\n    return null;\n  }\n\n  /* end*/\n}\n\nexport default Swipe;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Swipe.js","/**\n * @file Tap.js\n * Contains the Tap class\n */\n\nimport Gesture from './Gesture.js';\nimport util from './../core/util.js';\n\nconst DEFAULT_MIN_DELAY_MS = 0;\nconst DEFAULT_MAX_DELAY_MS = 300;\nconst DEFAULT_INPUTS = 1;\nconst DEFAULT_MOVE_PX_TOLERANCE = 10;\n\n/**\n * A Tap is defined as a touchstart to touchend event in quick succession.\n * @class Tap\n */\nclass Tap extends Gesture {\n  /**\n   * Constructor function for the Tap class.\n   * @param {Object} [options] - The options object.\n   * @param {Number} [options.minDelay=0] - The minimum delay between a\n   * touchstart and touchend can be configured in milliseconds.\n   * @param {Number} [options.maxDelay=300] - The maximum delay between a\n   * touchstart and touchend can be configured in milliseconds.\n   * @param {Number} [options.numInputs=1] - Number of inputs for Tap gesture.\n   * @param {Number} [options.tolerance=10] - The tolerance in pixels\n   *  a user can move.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'tap';\n\n    /**\n     * The minimum amount between a touchstart and a touchend can be configured\n     * in milliseconds. The minimum delay starts to count down when the expected\n     * number of inputs are on the screen, and ends when ALL inputs are off the\n     * screen.\n     * @type {Number}\n     */\n    this.minDelay = (options && options.minDelay) ?\n      options.minDelay : DEFAULT_MIN_DELAY_MS;\n\n    /**\n     * The maximum delay between a touchstart and touchend can be configured in\n     * milliseconds. The maximum delay starts to count down when the expected\n     * number of inputs are on the screen, and ends when ALL inputs are off the\n     * screen.\n     * @type {Number}\n     */\n    this.maxDelay = (options && options.maxDelay) ?\n      options.maxDelay : DEFAULT_MAX_DELAY_MS;\n\n    /**\n     * The number of inputs to trigger a Tap can be variable,\n     * and the maximum number being a factor of the browser.\n     * @type {Number}\n     */\n    this.numInputs = (options && options.numInputs) ?\n      options.numInputs : DEFAULT_INPUTS;\n\n    /**\n     * A move tolerance in pixels allows some slop between a user's start to end\n     * events. This allows the Tap gesture to be triggered more easily.\n     * @type {number}\n     */\n    this.tolerance = (options && options.tolerance) ?\n      options.tolerance : DEFAULT_MOVE_PX_TOLERANCE;\n  }\n\n  /* constructor*/\n\n  /**\n   * Event hook for the start of a gesture. Keeps track of when the inputs\n   * trigger the start event.\n   * @param {Array} inputs - The array of Inputs on the screen.\n   * @return {null} - Tap does not trigger on a start event.\n   */\n  start(inputs) {\n    if (inputs.length === this.numInputs) {\n      inputs.forEach((input) => {\n        let progress = input.getGestureProgress(this.type);\n        progress.start = new Date().getTime();\n      });\n    }\n\n    return null;\n  }\n\n  /* start*/\n\n  /**\n   * Event hook for the move of a gesture. The Tap event reaches here if the\n   * user starts to move their input before an 'end' event is reached.\n   * @param {Array} inputs - The array of Inputs on the screen.\n   * @param {Object} state - The state object of the current region.\n   * @param {Element} element - The element associated to the binding.\n   * @return {null} - Tap does not trigger on a move event.\n   */\n  move(inputs, state, element) {\n    for (let i = 0; i < inputs.length; i++) {\n      if (inputs[i].getCurrentEventType() === 'move') {\n        let current = inputs[i].current;\n        let previous = inputs[i].previous;\n        if (!util.isWithin(\n            current.x,\n            current.y,\n            previous.x,\n            previous.y,\n            this.tolerance)) {\n          let type = this.type;\n          inputs.forEach(function(input) {\n            input.resetProgress(type);\n          });\n\n          return null;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /* move*/\n\n  /**\n   * Event hook for the end of a gesture.\n   * Determines if this the tap event can be fired if the delay and tolerance\n   * constraints are met. Also waits for all of the inputs to be off the screen\n   * before determining if the gesture is triggered.\n   * @param {Array} inputs - The array of Inputs on the screen.\n   * @return {null|Object} - null if the gesture is not to be emitted,\n   * Object with information otherwise. Returns the interval time between start\n   * and end events.\n   */\n  end(inputs) {\n    if (inputs.length !== this.numInputs) {\n      return null;\n    }\n\n    let startTime = Number.MAX_VALUE;\n    for (let i = 0; i < inputs.length; i++) {\n      if (inputs[i].getCurrentEventType() !== 'end') {\n        return null;\n      }\n\n      let progress = inputs[i].getGestureProgress(this.type);\n      if (!progress.start) {\n        return null;\n      }\n\n      // Find the most recent input's startTime\n      if (progress.start < startTime) {\n        startTime = progress.start;\n      }\n    }\n\n    let interval = new Date().getTime() - startTime;\n    if ((this.minDelay <= interval) && (this.maxDelay >= interval)) {\n      return {\n        interval: interval,\n      };\n    } else {\n      let type = this.type;\n      inputs.forEach(function(input) {\n        input.resetProgress(type);\n      });\n\n      return null;\n    }\n  }\n\n  /* end*/\n}\n\nexport default Tap;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Tap.js","/**\n * @file Binding.js\n */\n\n/**\n * Responsible for creating a binding between an element and a gesture.\n * @class Binding\n */\nclass Binding {\n  /**\n   * Constructor function for the Binding class.\n   * @param {Element} element - The element to associate the gesture to.\n   * @param {Gesture} gesture - A instance of the Gesture type.\n   * @param {Function} handler - The function handler to execute when a\n   * gesture is recognized\n   * on the associated element.\n   * @param {Boolean} [capture=false] - A boolean signifying if the event is\n   * to be emitted during\n   * the capture or bubble phase.\n   * @param {Boolean} [bindOnce=false] - A boolean flag\n   * used for the bindOnce syntax.\n   */\n  constructor(element, gesture, handler, capture, bindOnce) {\n    /**\n     * The element to associate the gesture to.\n     * @type {Element}\n     */\n    this.element = element;\n    /**\n     * A instance of the Gesture type.\n     * @type {Gesture}\n     */\n    this.gesture = gesture;\n    /**\n     * The function handler to execute when a gesture is\n     * recognized on the associated element.\n     * @type {Function}\n     */\n    this.handler = handler;\n\n    /**\n     * A boolean signifying if the event is to be\n     * emitted during the capture or bubble phase.\n     * @type {Boolean}\n     */\n    this.capture = (typeof capture !== 'undefined') ? capture : false;\n\n    /**\n     * A boolean flag used for the bindOnce syntax.\n     * @type {Boolean}\n     */\n    this.bindOnce = (typeof bindOnce !== 'undefined') ? bindOnce : false;\n  }\n\n}\n\nexport default Binding;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/Binding.js","/**\n * @file Input.js\n */\n\nimport ZingEvent from './ZingEvent.js';\n\n/**\n * Tracks a single input and contains information about the\n * current, previous, and initial events.\n * Contains the progress of each Input and it's associated gestures.\n * @class Input\n */\nclass Input {\n\n  /**\n   * Constructor function for the Input class.\n   * @param {Event} event - The Event object from the window\n   * @param {Number} [identifier=0] - The identifier for each input event\n   * (taken from event.changedTouches)\n   */\n  constructor(event, identifier) {\n    let currentEvent = new ZingEvent(event, identifier);\n\n    /**\n     * Holds the initial event object. A touchstart/mousedown event.\n     * @type {ZingEvent}\n     */\n    this.initial = currentEvent;\n\n    /**\n     * Holds the most current event for this Input, disregarding any other past,\n     * current, and future events that other Inputs participate in.\n     * e.g. This event ended in an 'end' event, but another Input is still\n     * participating in events -- this will not be updated in such cases.\n     * @type {ZingEvent}\n     */\n    this.current = currentEvent;\n\n    /**\n     * Holds the previous event that took place.\n     * @type {ZingEvent}\n     */\n    this.previous = currentEvent;\n\n    /**\n     * Refers to the event.touches index, or 0 if a simple mouse event occurred.\n     * @type {Number}\n     */\n    this.identifier = (typeof identifier !== 'undefined') ? identifier : 0;\n\n    /**\n     * Stores internal state between events for\n     * each gesture based off of the gesture's id.\n     * @type {Object}\n     */\n    this.progress = {};\n  }\n\n  /**\n   * Receives an input, updates the internal state of what the input has done.\n   * @param {Event} event - The event object to wrap with a ZingEvent.\n   * @param {Number} touchIdentifier - The index of inputs, from event.touches\n   */\n  update(event, touchIdentifier) {\n    this.previous = this.current;\n    this.current = new ZingEvent(event, touchIdentifier);\n  }\n\n  /**\n   * Returns the progress of the specified gesture.\n   * @param {String} id - The identifier for each unique Gesture's progress.\n   * @return {Object} - The progress of the gesture.\n   * Creates an empty object if no progress has begun.\n   */\n  getGestureProgress(id) {\n    if (!this.progress[id]) {\n      this.progress[id] = {};\n    }\n    return this.progress[id];\n  }\n\n  /**\n   * Returns the normalized current Event's type.\n   * @return {String} The current event's type ( start | move | end )\n   */\n  getCurrentEventType() {\n    return this.current.type;\n  }\n\n  /**\n   * Resets a progress/state object of the specified gesture.\n   * @param {String} id - The identifier of the specified gesture\n   */\n  resetProgress(id) {\n    this.progress[id] = {};\n  }\n\n}\n\nexport default Input;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/Input.js","/**\n * @file ZingEvent.js\n * Contains logic for ZingEvents\n */\n\nimport util from '../util.js';\n\nconst INITIAL_COORDINATE = 0;\n/**\n * An event wrapper that normalizes events across browsers and input devices\n * @class ZingEvent\n */\nclass ZingEvent {\n  /**\n   * @constructor\n   * @param {Event} event - The event object being wrapped.\n   * @param {Array} event.touches - The number of touches on\n   *  a screen (mobile only).\n   * @param {Object} event.changedTouches - The TouchList representing\n   * points that participated in the event.\n   * @param {Number} touchIdentifier - The index of touch if applicable\n   */\n  constructor(event, touchIdentifier) {\n    /**\n     * The original event object.\n     * @type {Event}\n     */\n    this.originalEvent = event;\n\n    /**\n     * The type of event or null if it is an event not predetermined.\n     * @see util.normalizeEvent\n     * @type {String | null}\n     */\n    this.type = util.normalizeEvent(event.type);\n\n    /**\n     * The X coordinate for the event, based off of the client.\n     * @type {number}\n     */\n    this.x = INITIAL_COORDINATE;\n\n    /**\n     * The Y coordinate for the event, based off of the client.\n     * @type {number}\n     */\n    this.y = INITIAL_COORDINATE;\n\n    let eventObj;\n    if (event.touches && event.changedTouches) {\n      for (let i = 0; i < event.changedTouches.length; i++) {\n        if (event.changedTouches[i].identifier === touchIdentifier) {\n          eventObj = event.changedTouches[i];\n          break;\n        }\n      }\n    } else {\n      eventObj = event;\n    }\n\n    this.x = this.clientX = eventObj.clientX;\n    this.y = this.clientY = eventObj.clientY;\n\n    this.pageX = eventObj.pageX;\n    this.pageY = eventObj.pageY;\n\n    this.screenX = eventObj.screenX;\n    this.screenY = eventObj.screenY;\n  }\n}\n\nexport default ZingEvent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/ZingEvent.js"],"sourceRoot":""},"metadata":{},"sourceType":"script"}